
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSANDEQUAL BREAK CHAR CONTINUE C_CONST DIVEQUAL DO ELSE EQ FOR GE ID IF INT LAND LE LOR MINUSEQUAL MINUSMINUS NE NUMBER OREQUAL PLUSEQUAL PLUSPLUS PRINTSTR RETURN S_CONST TIMESEQUAL VOID WHILE XOREQUALfile : unit\n            | file unitunit : fun_def\n            | declaration ";" fun_def : declaration_specifier ID "(" ")" compound_statement\n               | declaration_specifier ID "(" declaration_list ")" compound_statementstatement : expression ";"\n                 | declaration ";"\n                 | compound_statementexpression : ID "(" ")"\n                  | ID "(" expression_list ")" expression : PRINTSTR "(" S_CONST ")" declaration_specifier : VOID\n                             | INT\n                             | CHAR\n                             | INT pointer\n                             | CHAR pointerstatement : RETURN expression ";"\n                 | RETURN ";" statement : BREAK ";" statement : CONTINUE ";" statement : WHILE "(" expression ")" statementstatement : DO statement WHILE "(" expression ")" ";" statement : FOR "(" expression ";" expression ";" expression ")" statementstatement : IF "(" expression ")" statementstatement : IF "(" expression ")" statement ELSE statementdeclaration : declaration_specifier ID "[" NUMBER "]" "=" "{" expression_list "}"\n                   | declaration_specifier ID "[" NUMBER "]" declaration : declaration_specifier ID "=" expression\n                   | declaration_specifier ID expression : MINUSMINUS IDexpression : ID MINUSMINUSexpression : PLUSPLUS ID expression : ID PLUSPLUS expression : ID XOREQUAL expressionexpression : ID ANDEQUAL expressionexpression : ID OREQUAL expressionexpression : ID TIMESEQUAL expressionexpression : ID DIVEQUAL expressionexpression : ID PLUSEQUAL expressionexpression : ID MINUSEQUAL expressionexpression : ID "=" expressionexpression_list : expression\n                       | expression_list \',\' expressiondeclaration_list : declaration\n                        | declaration_list \',\' declarationexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'&\' expression\n                  | expression \'|\' expression\n                  | expression \'^\' expressionexpression : \'~\' expression %prec UMINUSexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\' expression : ID \'[\' expression \']\'expression : ID \'[\' expression \']\' \'=\' expressionexpression : NUMBERexpression : IDexpression : \'&\' IDexpression : \'&\' ID \'[\' expression \']\' expression : "*" ID "=" expressionexpression : \'*\' IDpointer : \'*\'\n               | pointer \'*\' expression : C_CONSTexpression : eq_expeq_exp : expression EQ expression\n              | expression NE expression\n              | expression LOR expression\n              | expression LAND expression\n              | expression \'<\' expression\n              | expression \'>\' expression\n              | expression GE expression\n              | expression LE expressioncompound_statement : "{" statement_list "}"\n                          | "{" "}" statement_list : statement\n                      | statement_list statement'
    
_lr_action_items = {'VOID':([0,1,2,3,9,10,15,38,39,41,78,79,80,83,88,91,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[6,6,-1,-3,-2,-4,6,-5,6,6,6,-78,-79,-9,6,-6,-77,-80,-7,-8,-19,-20,-21,-18,6,6,-22,-25,6,-23,-26,6,-24,]),'INT':([0,1,2,3,9,10,15,38,39,41,78,79,80,83,88,91,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[7,7,-1,-3,-2,-4,7,-5,7,7,7,-78,-79,-9,7,-6,-77,-80,-7,-8,-19,-20,-21,-18,7,7,-22,-25,7,-23,-26,7,-24,]),'CHAR':([0,1,2,3,9,10,15,38,39,41,78,79,80,83,88,91,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[8,8,-1,-3,-2,-4,8,-5,8,8,8,-78,-79,-9,8,-6,-77,-80,-7,-8,-19,-20,-21,-18,8,8,-22,-25,8,-23,-26,8,-24,]),'$end':([1,2,3,9,10,38,79,91,125,],[0,-1,-3,-2,-4,-5,-78,-6,-77,]),';':([4,11,24,25,34,35,36,37,42,44,45,72,73,74,75,76,77,81,82,84,85,86,94,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,147,152,157,158,161,163,],[10,-30,-60,-29,-59,-67,-68,-30,-28,-32,-34,-31,-33,-55,-64,-61,-54,127,128,130,131,132,-10,-35,-36,-37,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-52,-53,-69,-70,-71,-72,-73,-74,-75,-76,-56,144,-11,-57,-12,-63,155,-62,-27,-58,164,166,]),'ID':([5,6,7,8,12,13,14,17,18,19,26,28,29,30,31,32,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,88,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,151,153,154,155,156,159,162,164,165,166,168,169,170,],[11,-13,-14,-15,-16,-65,-17,24,-66,37,24,72,73,24,75,76,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-78,-79,-9,24,24,24,24,-77,-80,-7,-8,-19,-20,-21,24,24,24,24,24,-18,24,24,24,24,24,-22,-25,24,24,-23,-26,24,-24,]),'*':([7,8,12,13,14,17,18,24,25,26,30,33,34,35,36,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,83,84,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,147,148,150,151,152,153,154,155,156,158,159,160,161,162,164,165,166,167,168,169,170,],[13,13,18,-65,18,31,-66,-60,57,31,31,31,-59,-67,-68,31,31,-32,-34,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,57,-31,-33,-55,-64,-61,-54,31,-78,-79,57,-9,31,31,-10,57,57,57,57,57,57,57,57,57,57,57,57,-49,-50,57,57,57,57,57,57,57,57,57,57,57,-56,31,31,-77,-80,-7,-8,57,-19,-20,-21,31,31,31,31,-11,31,-57,-12,57,57,-18,57,57,57,57,31,-62,31,31,31,31,57,-22,57,57,-25,31,31,-23,57,-26,31,-24,]),'(':([11,17,24,26,27,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,87,88,89,90,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,146,151,153,154,155,156,159,162,164,165,166,168,169,170,],[15,26,43,26,71,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-78,-79,-9,26,133,26,135,136,26,26,-77,-80,-7,-8,-19,-20,-21,26,26,26,26,26,-18,154,26,26,26,26,26,-22,-25,26,26,-23,-26,26,-24,]),'[':([11,24,37,76,],[16,54,16,124,]),'=':([11,24,37,42,75,140,],[17,53,17,93,123,151,]),')':([15,21,22,24,25,34,35,36,37,42,43,44,45,70,72,73,74,75,76,77,92,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,138,140,141,142,145,148,150,152,157,158,160,167,],[20,40,-45,-60,-29,-59,-67,-68,-30,-28,94,-32,-34,121,-31,-33,-55,-64,-61,-54,-46,-10,138,-43,-35,-36,-37,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-52,-53,-69,-70,-71,-72,-73,-74,-75,-76,-56,141,-11,-57,-12,-63,153,156,-44,-62,-27,-58,163,169,]),'NUMBER':([16,17,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,88,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,151,153,154,155,156,159,162,164,165,166,168,169,170,],[23,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-78,-79,-9,34,34,34,34,-77,-80,-7,-8,-19,-20,-21,34,34,34,34,34,-18,34,34,34,34,34,-22,-25,34,34,-23,-26,34,-24,]),'PRINTSTR':([17,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,88,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,151,153,154,155,156,159,162,164,165,166,168,169,170,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-78,-79,-9,27,27,27,27,-77,-80,-7,-8,-19,-20,-21,27,27,27,27,27,-18,27,27,27,27,27,-22,-25,27,27,-23,-26,27,-24,]),'MINUSMINUS':([17,24,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,88,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,151,153,154,155,156,159,162,164,165,166,168,169,170,],[28,44,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-78,-79,-9,28,28,28,28,-77,-80,-7,-8,-19,-20,-21,28,28,28,28,28,-18,28,28,28,28,28,-22,-25,28,28,-23,-26,28,-24,]),'PLUSPLUS':([17,24,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,88,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,151,153,154,155,156,159,162,164,165,166,168,169,170,],[29,45,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-78,-79,-9,29,29,29,29,-77,-80,-7,-8,-19,-20,-21,29,29,29,29,29,-18,29,29,29,29,29,-22,-25,29,29,-23,-26,29,-24,]),'~':([17,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,88,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,151,153,154,155,156,159,162,164,165,166,168,169,170,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-78,-79,-9,33,33,33,33,-77,-80,-7,-8,-19,-20,-21,33,33,33,33,33,-18,33,33,33,33,33,-22,-25,33,33,-23,-26,33,-24,]),'-':([17,24,25,26,30,33,34,35,36,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,83,84,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,147,148,150,151,152,153,154,155,156,158,159,160,161,162,164,165,166,167,168,169,170,],[30,-60,56,30,30,30,-59,-67,-68,30,30,-32,-34,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,56,-31,-33,-55,-64,-61,-54,30,-78,-79,56,-9,30,30,-10,56,56,56,56,56,56,56,56,56,56,-47,-48,-49,-50,56,56,56,56,56,56,56,56,56,56,56,-56,30,30,-77,-80,-7,-8,56,-19,-20,-21,30,30,30,30,-11,30,-57,-12,56,56,-18,56,56,56,56,30,-62,30,30,30,30,56,-22,56,56,-25,30,30,-23,56,-26,30,-24,]),'&':([17,24,25,26,30,33,34,35,36,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,83,84,88,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,147,148,150,151,152,153,154,155,156,158,159,160,161,162,164,165,166,167,168,169,170,],[32,-60,59,32,32,32,-59,-67,-68,32,32,-32,-34,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,-31,-33,-55,-64,-61,-54,32,-78,-79,59,-9,32,32,-10,59,59,59,59,59,59,59,59,59,59,-47,-48,-49,-50,59,59,59,59,59,59,59,59,59,59,59,-56,32,32,-77,-80,-7,-8,59,-19,-20,-21,32,32,32,32,-11,32,-57,-12,59,59,-18,59,59,59,59,32,-62,32,32,32,32,59,-22,59,59,-25,32,32,-23,59,-26,32,-24,]),'C_CONST':([17,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,83,84,88,123,124,125,126,127,128,130,131,132,133,135,136,137,139,144,151,153,154,155,156,159,162,164,165,166,168,169,170,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-78,-79,-9,35,35,35,35,-77,-80,-7,-8,-19,-20,-21,35,35,35,35,35,-18,35,35,35,35,35,-22,-25,35,35,-23,-26,35,-24,]),'{':([20,39,40,78,79,80,83,88,93,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[39,39,39,39,-78,-79,-9,39,137,-77,-80,-7,-8,-19,-20,-21,-18,39,39,-22,-25,39,-23,-26,39,-24,]),',':([21,22,24,25,34,35,36,37,42,44,45,72,73,74,75,76,77,92,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,138,140,141,142,149,150,152,157,158,],[41,-45,-60,-29,-59,-67,-68,-30,-28,-32,-34,-31,-33,-55,-64,-61,-54,-46,-10,139,-43,-35,-36,-37,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-52,-53,-69,-70,-71,-72,-73,-74,-75,-76,-56,-11,-57,-12,-63,139,-44,-62,-27,-58,]),']':([23,24,34,35,36,44,45,72,73,74,75,76,77,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,138,140,141,142,143,152,158,],[42,-60,-59,-67,-68,-32,-34,-31,-33,-55,-64,-61,-54,-10,-35,-36,-37,-38,-39,-40,-41,-42,140,-47,-48,-49,-50,-51,-52,-53,-69,-70,-71,-72,-73,-74,-75,-76,-56,-11,-57,-12,-63,152,-62,-58,]),'XOREQUAL':([24,],[46,]),'ANDEQUAL':([24,],[47,]),'OREQUAL':([24,],[48,]),'TIMESEQUAL':([24,],[49,]),'DIVEQUAL':([24,],[50,]),'PLUSEQUAL':([24,],[51,]),'MINUSEQUAL':([24,],[52,]),'+':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,55,-59,-67,-68,-32,-34,55,-31,-33,-55,-64,-61,-54,55,-10,55,55,55,55,55,55,55,55,55,55,-47,-48,-49,-50,55,55,55,55,55,55,55,55,55,55,55,-56,55,-11,-57,-12,55,55,55,55,55,55,-62,55,55,55,55,]),'/':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,58,-59,-67,-68,-32,-34,58,-31,-33,-55,-64,-61,-54,58,-10,58,58,58,58,58,58,58,58,58,58,58,58,-49,-50,58,58,58,58,58,58,58,58,58,58,58,-56,58,-11,-57,-12,58,58,58,58,58,58,-62,58,58,58,58,]),'|':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,60,-59,-67,-68,-32,-34,60,-31,-33,-55,-64,-61,-54,60,-10,60,60,60,60,60,60,60,60,60,60,-47,-48,-49,-50,60,60,60,60,60,60,60,60,60,60,60,-56,60,-11,-57,-12,60,60,60,60,60,60,-62,60,60,60,60,]),'^':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,61,-59,-67,-68,-32,-34,61,-31,-33,-55,-64,-61,-54,61,-10,61,61,61,61,61,61,61,61,61,61,-47,-48,-49,-50,61,61,61,61,61,61,61,61,61,61,61,-56,61,-11,-57,-12,61,61,61,61,61,61,-62,61,61,61,61,]),'EQ':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,62,-59,-67,-68,-32,-34,62,-31,-33,-55,-64,-61,-54,62,-10,62,62,62,62,62,62,62,62,62,62,-47,-48,-49,-50,62,62,62,62,62,62,62,62,62,62,62,-56,62,-11,-57,-12,62,62,62,62,62,62,-62,62,62,62,62,]),'NE':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,63,-59,-67,-68,-32,-34,63,-31,-33,-55,-64,-61,-54,63,-10,63,63,63,63,63,63,63,63,63,63,-47,-48,-49,-50,63,63,63,63,63,63,63,63,63,63,63,-56,63,-11,-57,-12,63,63,63,63,63,63,-62,63,63,63,63,]),'LOR':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,64,-59,-67,-68,-32,-34,64,-31,-33,-55,-64,-61,-54,64,-10,64,64,64,64,64,64,64,64,64,64,-47,-48,-49,-50,64,64,64,64,64,64,64,64,64,64,64,-56,64,-11,-57,-12,64,64,64,64,64,64,-62,64,64,64,64,]),'LAND':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,65,-59,-67,-68,-32,-34,65,-31,-33,-55,-64,-61,-54,65,-10,65,65,65,65,65,65,65,65,65,65,-47,-48,-49,-50,65,65,65,65,65,65,65,65,65,65,65,-56,65,-11,-57,-12,65,65,65,65,65,65,-62,65,65,65,65,]),'<':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,66,-59,-67,-68,-32,-34,66,-31,-33,-55,-64,-61,-54,66,-10,66,66,66,66,66,66,66,66,66,66,-47,-48,-49,-50,66,66,66,66,66,66,66,66,66,66,66,-56,66,-11,-57,-12,66,66,66,66,66,66,-62,66,66,66,66,]),'>':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,67,-59,-67,-68,-32,-34,67,-31,-33,-55,-64,-61,-54,67,-10,67,67,67,67,67,67,67,67,67,67,-47,-48,-49,-50,67,67,67,67,67,67,67,67,67,67,67,-56,67,-11,-57,-12,67,67,67,67,67,67,-62,67,67,67,67,]),'GE':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,68,-59,-67,-68,-32,-34,68,-31,-33,-55,-64,-61,-54,68,-10,68,68,68,68,68,68,68,68,68,68,-47,-48,-49,-50,68,68,68,68,68,68,68,68,68,68,68,-56,68,-11,-57,-12,68,68,68,68,68,68,-62,68,68,68,68,]),'LE':([24,25,34,35,36,44,45,70,72,73,74,75,76,77,81,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,129,138,140,141,142,143,145,147,148,150,152,158,160,161,167,],[-60,69,-59,-67,-68,-32,-34,69,-31,-33,-55,-64,-61,-54,69,-10,69,69,69,69,69,69,69,69,69,69,-47,-48,-49,-50,69,69,69,69,69,69,69,69,69,69,69,-56,69,-11,-57,-12,69,69,69,69,69,69,-62,69,69,69,69,]),'}':([24,34,35,36,39,44,45,72,73,74,75,76,77,78,79,80,83,94,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,130,131,132,138,140,141,142,144,149,150,152,158,159,162,166,168,170,],[-60,-59,-67,-68,79,-32,-34,-31,-33,-55,-64,-61,-54,125,-78,-79,-9,-10,-43,-35,-36,-37,-38,-39,-40,-41,-42,-47,-48,-49,-50,-51,-52,-53,-69,-70,-71,-72,-73,-74,-75,-76,-56,-77,-80,-7,-8,-19,-20,-21,-11,-57,-12,-63,-18,157,-44,-62,-58,-22,-25,-23,-26,-24,]),'RETURN':([39,78,79,80,83,88,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[84,84,-78,-79,-9,84,-77,-80,-7,-8,-19,-20,-21,-18,84,84,-22,-25,84,-23,-26,84,-24,]),'BREAK':([39,78,79,80,83,88,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[85,85,-78,-79,-9,85,-77,-80,-7,-8,-19,-20,-21,-18,85,85,-22,-25,85,-23,-26,85,-24,]),'CONTINUE':([39,78,79,80,83,88,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[86,86,-78,-79,-9,86,-77,-80,-7,-8,-19,-20,-21,-18,86,86,-22,-25,86,-23,-26,86,-24,]),'WHILE':([39,78,79,80,83,88,125,126,127,128,130,131,132,134,144,153,156,159,162,165,166,168,169,170,],[87,87,-78,-79,-9,87,-77,-80,-7,-8,-19,-20,-21,146,-18,87,87,-22,-25,87,-23,-26,87,-24,]),'DO':([39,78,79,80,83,88,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[88,88,-78,-79,-9,88,-77,-80,-7,-8,-19,-20,-21,-18,88,88,-22,-25,88,-23,-26,88,-24,]),'FOR':([39,78,79,80,83,88,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[89,89,-78,-79,-9,89,-77,-80,-7,-8,-19,-20,-21,-18,89,89,-22,-25,89,-23,-26,89,-24,]),'IF':([39,78,79,80,83,88,125,126,127,128,130,131,132,144,153,156,159,162,165,166,168,169,170,],[90,90,-78,-79,-9,90,-77,-80,-7,-8,-19,-20,-21,-18,90,90,-22,-25,90,-23,-26,90,-24,]),'S_CONST':([71,],[122,]),'ELSE':([79,83,125,127,128,130,131,132,144,159,162,166,168,170,],[-78,-9,-77,-7,-8,-19,-20,-21,-18,-22,165,-23,-26,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'unit':([0,1,],[2,9,]),'fun_def':([0,1,],[3,3,]),'declaration':([0,1,15,39,41,78,88,153,156,165,169,],[4,4,22,82,92,82,82,82,82,82,82,]),'declaration_specifier':([0,1,15,39,41,78,88,153,156,165,169,],[5,5,19,19,19,19,19,19,19,19,19,]),'pointer':([7,8,],[12,14,]),'declaration_list':([15,],[21,]),'expression':([17,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,84,88,123,124,133,135,136,137,139,151,153,154,155,156,164,165,169,],[25,70,74,77,81,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,81,129,81,142,143,145,147,148,96,150,158,81,160,161,81,167,81,81,]),'eq_exp':([17,26,30,33,39,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,84,88,123,124,133,135,136,137,139,151,153,154,155,156,164,165,169,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'compound_statement':([20,39,40,78,88,153,156,165,169,],[38,83,91,83,83,83,83,83,83,]),'statement_list':([39,],[78,]),'statement':([39,78,88,153,156,165,169,],[80,126,134,159,162,168,170,]),'expression_list':([43,137,],[95,149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> unit','file',1,'p_file','c_parser.py',82),
  ('file -> file unit','file',2,'p_file','c_parser.py',83),
  ('unit -> fun_def','unit',1,'p_unit','c_parser.py',91),
  ('unit -> declaration ;','unit',2,'p_unit','c_parser.py',92),
  ('fun_def -> declaration_specifier ID ( ) compound_statement','fun_def',5,'p_statement_fun_def','c_parser.py',97),
  ('fun_def -> declaration_specifier ID ( declaration_list ) compound_statement','fun_def',6,'p_statement_fun_def','c_parser.py',98),
  ('statement -> expression ;','statement',2,'p_statement_expr','c_parser.py',107),
  ('statement -> declaration ;','statement',2,'p_statement_expr','c_parser.py',108),
  ('statement -> compound_statement','statement',1,'p_statement_expr','c_parser.py',109),
  ('expression -> ID ( )','expression',3,'p_statement_fun_call','c_parser.py',114),
  ('expression -> ID ( expression_list )','expression',4,'p_statement_fun_call','c_parser.py',115),
  ('expression -> PRINTSTR ( S_CONST )','expression',4,'p_statement_str_call','c_parser.py',124),
  ('declaration_specifier -> VOID','declaration_specifier',1,'p_declaration_specifier','c_parser.py',129),
  ('declaration_specifier -> INT','declaration_specifier',1,'p_declaration_specifier','c_parser.py',130),
  ('declaration_specifier -> CHAR','declaration_specifier',1,'p_declaration_specifier','c_parser.py',131),
  ('declaration_specifier -> INT pointer','declaration_specifier',2,'p_declaration_specifier','c_parser.py',132),
  ('declaration_specifier -> CHAR pointer','declaration_specifier',2,'p_declaration_specifier','c_parser.py',133),
  ('statement -> RETURN expression ;','statement',3,'p_statement_return','c_parser.py',141),
  ('statement -> RETURN ;','statement',2,'p_statement_return','c_parser.py',142),
  ('statement -> BREAK ;','statement',2,'p_statement_break','c_parser.py',150),
  ('statement -> CONTINUE ;','statement',2,'p_statement_continue','c_parser.py',155),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_statement_while_def','c_parser.py',160),
  ('statement -> DO statement WHILE ( expression ) ;','statement',7,'p_statement_dowhile_def','c_parser.py',165),
  ('statement -> FOR ( expression ; expression ; expression ) statement','statement',9,'p_statement_for_def','c_parser.py',170),
  ('statement -> IF ( expression ) statement','statement',5,'p_statement_if_def','c_parser.py',175),
  ('statement -> IF ( expression ) statement ELSE statement','statement',7,'p_statement_if_else_def','c_parser.py',180),
  ('declaration -> declaration_specifier ID [ NUMBER ] = { expression_list }','declaration',9,'p_statement_arr_def','c_parser.py',185),
  ('declaration -> declaration_specifier ID [ NUMBER ]','declaration',5,'p_statement_arr_def','c_parser.py',186),
  ('declaration -> declaration_specifier ID = expression','declaration',4,'p_statement_def','c_parser.py',194),
  ('declaration -> declaration_specifier ID','declaration',2,'p_statement_def','c_parser.py',195),
  ('expression -> MINUSMINUS ID','expression',2,'p_statement_rminusminus','c_parser.py',203),
  ('expression -> ID MINUSMINUS','expression',2,'p_statement_minusminus','c_parser.py',208),
  ('expression -> PLUSPLUS ID','expression',2,'p_statement_rplusplus','c_parser.py',213),
  ('expression -> ID PLUSPLUS','expression',2,'p_statement_plusplus','c_parser.py',218),
  ('expression -> ID XOREQUAL expression','expression',3,'p_statement_xoreq','c_parser.py',223),
  ('expression -> ID ANDEQUAL expression','expression',3,'p_statement_andeq','c_parser.py',228),
  ('expression -> ID OREQUAL expression','expression',3,'p_statement_oreq','c_parser.py',233),
  ('expression -> ID TIMESEQUAL expression','expression',3,'p_statement_muleq','c_parser.py',238),
  ('expression -> ID DIVEQUAL expression','expression',3,'p_statement_diveq','c_parser.py',243),
  ('expression -> ID PLUSEQUAL expression','expression',3,'p_statement_pluseq','c_parser.py',248),
  ('expression -> ID MINUSEQUAL expression','expression',3,'p_statement_minuseq','c_parser.py',253),
  ('expression -> ID = expression','expression',3,'p_statement_assign','c_parser.py',258),
  ('expression_list -> expression','expression_list',1,'p_expression_list','c_parser.py',263),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','c_parser.py',264),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',272),
  ('declaration_list -> declaration_list , declaration','declaration_list',3,'p_declaration_list','c_parser.py',273),
  ('expression -> expression + expression','expression',3,'p_expression_binop','c_parser.py',281),
  ('expression -> expression - expression','expression',3,'p_expression_binop','c_parser.py',282),
  ('expression -> expression * expression','expression',3,'p_expression_binop','c_parser.py',283),
  ('expression -> expression / expression','expression',3,'p_expression_binop','c_parser.py',284),
  ('expression -> expression & expression','expression',3,'p_expression_binop','c_parser.py',285),
  ('expression -> expression | expression','expression',3,'p_expression_binop','c_parser.py',286),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','c_parser.py',287),
  ('expression -> ~ expression','expression',2,'p_expression_not','c_parser.py',292),
  ('expression -> - expression','expression',2,'p_expression_uminus','c_parser.py',297),
  ('expression -> ( expression )','expression',3,'p_expression_group','c_parser.py',302),
  ('expression -> ID [ expression ]','expression',4,'p_expression_arr_name','c_parser.py',307),
  ('expression -> ID [ expression ] = expression','expression',6,'p_expression_arr_assign','c_parser.py',312),
  ('expression -> NUMBER','expression',1,'p_expression_number','c_parser.py',317),
  ('expression -> ID','expression',1,'p_expression_name','c_parser.py',322),
  ('expression -> & ID','expression',2,'p_expression_address','c_parser.py',327),
  ('expression -> & ID [ expression ]','expression',5,'p_expression_arr_address','c_parser.py',332),
  ('expression -> * ID = expression','expression',4,'p_statement_ptr_assign','c_parser.py',337),
  ('expression -> * ID','expression',2,'p_expression_pointer_access','c_parser.py',342),
  ('pointer -> *','pointer',1,'p_expression_pointer','c_parser.py',347),
  ('pointer -> pointer *','pointer',2,'p_expression_pointer','c_parser.py',348),
  ('expression -> C_CONST','expression',1,'p_expression_char','c_parser.py',356),
  ('expression -> eq_exp','expression',1,'p_cond_exp','c_parser.py',361),
  ('eq_exp -> expression EQ expression','eq_exp',3,'p_eq_exp','c_parser.py',366),
  ('eq_exp -> expression NE expression','eq_exp',3,'p_eq_exp','c_parser.py',367),
  ('eq_exp -> expression LOR expression','eq_exp',3,'p_eq_exp','c_parser.py',368),
  ('eq_exp -> expression LAND expression','eq_exp',3,'p_eq_exp','c_parser.py',369),
  ('eq_exp -> expression < expression','eq_exp',3,'p_eq_exp','c_parser.py',370),
  ('eq_exp -> expression > expression','eq_exp',3,'p_eq_exp','c_parser.py',371),
  ('eq_exp -> expression GE expression','eq_exp',3,'p_eq_exp','c_parser.py',372),
  ('eq_exp -> expression LE expression','eq_exp',3,'p_eq_exp','c_parser.py',373),
  ('compound_statement -> { statement_list }','compound_statement',3,'p_compound_statement','c_parser.py',378),
  ('compound_statement -> { }','compound_statement',2,'p_compound_statement','c_parser.py',379),
  ('statement_list -> statement','statement_list',1,'p_statement_list','c_parser.py',385),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','c_parser.py',386),
]
