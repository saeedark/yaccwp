Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> file
Rule 1     file -> unit
Rule 2     file -> file unit
Rule 3     unit -> fun_def
Rule 4     unit -> declaration ;
Rule 5     fun_def -> declaration_specifier ID ( ) compound_statement
Rule 6     fun_def -> declaration_specifier ID ( declaration_list ) compound_statement
Rule 7     statement -> expression ;
Rule 8     statement -> declaration ;
Rule 9     statement -> compound_statement
Rule 10    expression -> ID ( )
Rule 11    expression -> ID ( expression_list )
Rule 12    expression -> PRINTSTR ( S_CONST )
Rule 13    declaration_specifier -> VOID
Rule 14    declaration_specifier -> INT
Rule 15    declaration_specifier -> CHAR
Rule 16    declaration_specifier -> INT pointer
Rule 17    declaration_specifier -> CHAR pointer
Rule 18    statement -> RETURN expression ;
Rule 19    statement -> RETURN ;
Rule 20    statement -> BREAK ;
Rule 21    statement -> CONTINUE ;
Rule 22    statement -> WHILE ( expression ) statement
Rule 23    statement -> DO statement WHILE ( expression ) ;
Rule 24    statement -> FOR ( expression ; expression ; expression ) statement
Rule 25    statement -> IF ( expression ) statement
Rule 26    statement -> IF ( expression ) statement ELSE statement
Rule 27    declaration -> declaration_specifier ID [ NUMBER ] = { expression_list }
Rule 28    declaration -> declaration_specifier ID [ NUMBER ]
Rule 29    declaration -> declaration_specifier ID = expression
Rule 30    declaration -> declaration_specifier ID
Rule 31    expression -> MINUSMINUS ID
Rule 32    expression -> ID MINUSMINUS
Rule 33    expression -> PLUSPLUS ID
Rule 34    expression -> ID PLUSPLUS
Rule 35    expression -> ID XOREQUAL expression
Rule 36    expression -> ID ANDEQUAL expression
Rule 37    expression -> ID OREQUAL expression
Rule 38    expression -> ID TIMESEQUAL expression
Rule 39    expression -> ID DIVEQUAL expression
Rule 40    expression -> ID PLUSEQUAL expression
Rule 41    expression -> ID MINUSEQUAL expression
Rule 42    expression -> ID = expression
Rule 43    expression_list -> expression
Rule 44    expression_list -> expression_list , expression
Rule 45    declaration_list -> declaration
Rule 46    declaration_list -> declaration_list , declaration
Rule 47    expression -> expression + expression
Rule 48    expression -> expression - expression
Rule 49    expression -> expression * expression
Rule 50    expression -> expression / expression
Rule 51    expression -> expression & expression
Rule 52    expression -> expression | expression
Rule 53    expression -> expression ^ expression
Rule 54    expression -> ~ expression
Rule 55    expression -> - expression
Rule 56    expression -> ( expression )
Rule 57    expression -> ID [ expression ]
Rule 58    expression -> ID [ expression ] = expression
Rule 59    expression -> NUMBER
Rule 60    expression -> ID
Rule 61    expression -> & ID
Rule 62    expression -> & ID [ expression ]
Rule 63    expression -> * ID = expression
Rule 64    expression -> * ID
Rule 65    pointer -> *
Rule 66    pointer -> pointer *
Rule 67    expression -> C_CONST
Rule 68    expression -> eq_exp
Rule 69    eq_exp -> expression EQ expression
Rule 70    eq_exp -> expression NE expression
Rule 71    eq_exp -> expression LOR expression
Rule 72    eq_exp -> expression LAND expression
Rule 73    eq_exp -> expression < expression
Rule 74    eq_exp -> expression > expression
Rule 75    eq_exp -> expression GE expression
Rule 76    eq_exp -> expression LE expression
Rule 77    compound_statement -> { statement_list }
Rule 78    compound_statement -> { }
Rule 79    statement_list -> statement
Rule 80    statement_list -> statement_list statement

Terminals, with rules where they appear

&                    : 51 61 62
(                    : 5 6 10 11 12 22 23 24 25 26 56
)                    : 5 6 10 11 12 22 23 24 25 26 56
*                    : 49 63 64 65 66
+                    : 47
,                    : 44 46
-                    : 48 55
/                    : 50
;                    : 4 7 8 18 19 20 21 23 24 24
<                    : 73
=                    : 27 29 42 58 63
>                    : 74
ANDEQUAL             : 36
BREAK                : 20
CHAR                 : 15 17
CONTINUE             : 21
C_CONST              : 67
DIVEQUAL             : 39
DO                   : 23
ELSE                 : 26
EQ                   : 69
FOR                  : 24
GE                   : 75
ID                   : 5 6 10 11 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 57 58 60 61 62 63 64
IF                   : 25 26
INT                  : 14 16
LAND                 : 72
LE                   : 76
LOR                  : 71
MINUSEQUAL           : 41
MINUSMINUS           : 31 32
NE                   : 70
NUMBER               : 27 28 59
OREQUAL              : 37
PLUSEQUAL            : 40
PLUSPLUS             : 33 34
PRINTSTR             : 12
RETURN               : 18 19
S_CONST              : 12
TIMESEQUAL           : 38
VOID                 : 13
WHILE                : 22 23
XOREQUAL             : 35
[                    : 27 28 57 58 62
]                    : 27 28 57 58 62
^                    : 53
error                : 
{                    : 27 77 78
|                    : 52
}                    : 27 77 78
~                    : 54

Nonterminals, with rules where they appear

compound_statement   : 5 6 9
declaration          : 4 8 45 46
declaration_list     : 6 46
declaration_specifier : 5 6 27 28 29 30
eq_exp               : 68
expression           : 7 18 22 23 24 24 24 25 26 29 35 36 37 38 39 40 41 42 43 44 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 55 56 57 58 58 62 63 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76
expression_list      : 11 27 44
file                 : 2 0
fun_def              : 3
pointer              : 16 17 66
statement            : 22 23 24 25 26 26 79 80
statement_list       : 77 80
unit                 : 1 2

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . unit
    (2) file -> . file unit
    (3) unit -> . fun_def
    (4) unit -> . declaration ;
    (5) fun_def -> . declaration_specifier ID ( ) compound_statement
    (6) fun_def -> . declaration_specifier ID ( declaration_list ) compound_statement
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    file                           shift and go to state 1
    unit                           shift and go to state 2
    fun_def                        shift and go to state 3
    declaration                    shift and go to state 4
    declaration_specifier          shift and go to state 5

state 1

    (0) S' -> file .
    (2) file -> file . unit
    (3) unit -> . fun_def
    (4) unit -> . declaration ;
    (5) fun_def -> . declaration_specifier ID ( ) compound_statement
    (6) fun_def -> . declaration_specifier ID ( declaration_list ) compound_statement
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    unit                           shift and go to state 9
    fun_def                        shift and go to state 3
    declaration                    shift and go to state 4
    declaration_specifier          shift and go to state 5

state 2

    (1) file -> unit .

    VOID            reduce using rule 1 (file -> unit .)
    INT             reduce using rule 1 (file -> unit .)
    CHAR            reduce using rule 1 (file -> unit .)
    $end            reduce using rule 1 (file -> unit .)


state 3

    (3) unit -> fun_def .

    VOID            reduce using rule 3 (unit -> fun_def .)
    INT             reduce using rule 3 (unit -> fun_def .)
    CHAR            reduce using rule 3 (unit -> fun_def .)
    $end            reduce using rule 3 (unit -> fun_def .)


state 4

    (4) unit -> declaration . ;

    ;               shift and go to state 10


state 5

    (5) fun_def -> declaration_specifier . ID ( ) compound_statement
    (6) fun_def -> declaration_specifier . ID ( declaration_list ) compound_statement
    (27) declaration -> declaration_specifier . ID [ NUMBER ] = { expression_list }
    (28) declaration -> declaration_specifier . ID [ NUMBER ]
    (29) declaration -> declaration_specifier . ID = expression
    (30) declaration -> declaration_specifier . ID

    ID              shift and go to state 11


state 6

    (13) declaration_specifier -> VOID .

    ID              reduce using rule 13 (declaration_specifier -> VOID .)


state 7

    (14) declaration_specifier -> INT .
    (16) declaration_specifier -> INT . pointer
    (65) pointer -> . *
    (66) pointer -> . pointer *

    ID              reduce using rule 14 (declaration_specifier -> INT .)
    *               shift and go to state 13

    pointer                        shift and go to state 12

state 8

    (15) declaration_specifier -> CHAR .
    (17) declaration_specifier -> CHAR . pointer
    (65) pointer -> . *
    (66) pointer -> . pointer *

    ID              reduce using rule 15 (declaration_specifier -> CHAR .)
    *               shift and go to state 13

    pointer                        shift and go to state 14

state 9

    (2) file -> file unit .

    VOID            reduce using rule 2 (file -> file unit .)
    INT             reduce using rule 2 (file -> file unit .)
    CHAR            reduce using rule 2 (file -> file unit .)
    $end            reduce using rule 2 (file -> file unit .)


state 10

    (4) unit -> declaration ; .

    VOID            reduce using rule 4 (unit -> declaration ; .)
    INT             reduce using rule 4 (unit -> declaration ; .)
    CHAR            reduce using rule 4 (unit -> declaration ; .)
    $end            reduce using rule 4 (unit -> declaration ; .)


state 11

    (5) fun_def -> declaration_specifier ID . ( ) compound_statement
    (6) fun_def -> declaration_specifier ID . ( declaration_list ) compound_statement
    (27) declaration -> declaration_specifier ID . [ NUMBER ] = { expression_list }
    (28) declaration -> declaration_specifier ID . [ NUMBER ]
    (29) declaration -> declaration_specifier ID . = expression
    (30) declaration -> declaration_specifier ID .

    (               shift and go to state 15
    [               shift and go to state 16
    =               shift and go to state 17
    ;               reduce using rule 30 (declaration -> declaration_specifier ID .)


state 12

    (16) declaration_specifier -> INT pointer .
    (66) pointer -> pointer . *

    ID              reduce using rule 16 (declaration_specifier -> INT pointer .)
    *               shift and go to state 18


state 13

    (65) pointer -> * .

    *               reduce using rule 65 (pointer -> * .)
    ID              reduce using rule 65 (pointer -> * .)


state 14

    (17) declaration_specifier -> CHAR pointer .
    (66) pointer -> pointer . *

    ID              reduce using rule 17 (declaration_specifier -> CHAR pointer .)
    *               shift and go to state 18


state 15

    (5) fun_def -> declaration_specifier ID ( . ) compound_statement
    (6) fun_def -> declaration_specifier ID ( . declaration_list ) compound_statement
    (45) declaration_list -> . declaration
    (46) declaration_list -> . declaration_list , declaration
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    )               shift and go to state 20
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    declaration_specifier          shift and go to state 19
    declaration_list               shift and go to state 21
    declaration                    shift and go to state 22

state 16

    (27) declaration -> declaration_specifier ID [ . NUMBER ] = { expression_list }
    (28) declaration -> declaration_specifier ID [ . NUMBER ]

    NUMBER          shift and go to state 23


state 17

    (29) declaration -> declaration_specifier ID = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 25
    eq_exp                         shift and go to state 36

state 18

    (66) pointer -> pointer * .

    *               reduce using rule 66 (pointer -> pointer * .)
    ID              reduce using rule 66 (pointer -> pointer * .)


state 19

    (27) declaration -> declaration_specifier . ID [ NUMBER ] = { expression_list }
    (28) declaration -> declaration_specifier . ID [ NUMBER ]
    (29) declaration -> declaration_specifier . ID = expression
    (30) declaration -> declaration_specifier . ID

    ID              shift and go to state 37


state 20

    (5) fun_def -> declaration_specifier ID ( ) . compound_statement
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }

    {               shift and go to state 39

    compound_statement             shift and go to state 38

state 21

    (6) fun_def -> declaration_specifier ID ( declaration_list . ) compound_statement
    (46) declaration_list -> declaration_list . , declaration

    )               shift and go to state 40
    ,               shift and go to state 41


state 22

    (45) declaration_list -> declaration .

    )               reduce using rule 45 (declaration_list -> declaration .)
    ,               reduce using rule 45 (declaration_list -> declaration .)


state 23

    (27) declaration -> declaration_specifier ID [ NUMBER . ] = { expression_list }
    (28) declaration -> declaration_specifier ID [ NUMBER . ]

    ]               shift and go to state 42


state 24

    (10) expression -> ID . ( )
    (11) expression -> ID . ( expression_list )
    (32) expression -> ID . MINUSMINUS
    (34) expression -> ID . PLUSPLUS
    (35) expression -> ID . XOREQUAL expression
    (36) expression -> ID . ANDEQUAL expression
    (37) expression -> ID . OREQUAL expression
    (38) expression -> ID . TIMESEQUAL expression
    (39) expression -> ID . DIVEQUAL expression
    (40) expression -> ID . PLUSEQUAL expression
    (41) expression -> ID . MINUSEQUAL expression
    (42) expression -> ID . = expression
    (57) expression -> ID . [ expression ]
    (58) expression -> ID . [ expression ] = expression
    (60) expression -> ID .

    (               shift and go to state 43
    MINUSMINUS      shift and go to state 44
    PLUSPLUS        shift and go to state 45
    XOREQUAL        shift and go to state 46
    ANDEQUAL        shift and go to state 47
    OREQUAL         shift and go to state 48
    TIMESEQUAL      shift and go to state 49
    DIVEQUAL        shift and go to state 50
    PLUSEQUAL       shift and go to state 51
    MINUSEQUAL      shift and go to state 52
    =               shift and go to state 53
    [               shift and go to state 54
    +               reduce using rule 60 (expression -> ID .)
    -               reduce using rule 60 (expression -> ID .)
    *               reduce using rule 60 (expression -> ID .)
    /               reduce using rule 60 (expression -> ID .)
    &               reduce using rule 60 (expression -> ID .)
    |               reduce using rule 60 (expression -> ID .)
    ^               reduce using rule 60 (expression -> ID .)
    EQ              reduce using rule 60 (expression -> ID .)
    NE              reduce using rule 60 (expression -> ID .)
    LOR             reduce using rule 60 (expression -> ID .)
    LAND            reduce using rule 60 (expression -> ID .)
    <               reduce using rule 60 (expression -> ID .)
    >               reduce using rule 60 (expression -> ID .)
    GE              reduce using rule 60 (expression -> ID .)
    LE              reduce using rule 60 (expression -> ID .)
    ;               reduce using rule 60 (expression -> ID .)
    )               reduce using rule 60 (expression -> ID .)
    ,               reduce using rule 60 (expression -> ID .)
    ]               reduce using rule 60 (expression -> ID .)
    }               reduce using rule 60 (expression -> ID .)


state 25

    (29) declaration -> declaration_specifier ID = expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    ;               reduce using rule 29 (declaration -> declaration_specifier ID = expression .)
    )               reduce using rule 29 (declaration -> declaration_specifier ID = expression .)
    ,               reduce using rule 29 (declaration -> declaration_specifier ID = expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 26

    (56) expression -> ( . expression )
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 70
    eq_exp                         shift and go to state 36

state 27

    (12) expression -> PRINTSTR . ( S_CONST )

    (               shift and go to state 71


state 28

    (31) expression -> MINUSMINUS . ID

    ID              shift and go to state 72


state 29

    (33) expression -> PLUSPLUS . ID

    ID              shift and go to state 73


state 30

    (55) expression -> - . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 74
    eq_exp                         shift and go to state 36

state 31

    (63) expression -> * . ID = expression
    (64) expression -> * . ID

    ID              shift and go to state 75


state 32

    (61) expression -> & . ID
    (62) expression -> & . ID [ expression ]

    ID              shift and go to state 76


state 33

    (54) expression -> ~ . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 77
    eq_exp                         shift and go to state 36

state 34

    (59) expression -> NUMBER .

    +               reduce using rule 59 (expression -> NUMBER .)
    -               reduce using rule 59 (expression -> NUMBER .)
    *               reduce using rule 59 (expression -> NUMBER .)
    /               reduce using rule 59 (expression -> NUMBER .)
    &               reduce using rule 59 (expression -> NUMBER .)
    |               reduce using rule 59 (expression -> NUMBER .)
    ^               reduce using rule 59 (expression -> NUMBER .)
    EQ              reduce using rule 59 (expression -> NUMBER .)
    NE              reduce using rule 59 (expression -> NUMBER .)
    LOR             reduce using rule 59 (expression -> NUMBER .)
    LAND            reduce using rule 59 (expression -> NUMBER .)
    <               reduce using rule 59 (expression -> NUMBER .)
    >               reduce using rule 59 (expression -> NUMBER .)
    GE              reduce using rule 59 (expression -> NUMBER .)
    LE              reduce using rule 59 (expression -> NUMBER .)
    ;               reduce using rule 59 (expression -> NUMBER .)
    )               reduce using rule 59 (expression -> NUMBER .)
    ,               reduce using rule 59 (expression -> NUMBER .)
    ]               reduce using rule 59 (expression -> NUMBER .)
    }               reduce using rule 59 (expression -> NUMBER .)


state 35

    (67) expression -> C_CONST .

    +               reduce using rule 67 (expression -> C_CONST .)
    -               reduce using rule 67 (expression -> C_CONST .)
    *               reduce using rule 67 (expression -> C_CONST .)
    /               reduce using rule 67 (expression -> C_CONST .)
    &               reduce using rule 67 (expression -> C_CONST .)
    |               reduce using rule 67 (expression -> C_CONST .)
    ^               reduce using rule 67 (expression -> C_CONST .)
    EQ              reduce using rule 67 (expression -> C_CONST .)
    NE              reduce using rule 67 (expression -> C_CONST .)
    LOR             reduce using rule 67 (expression -> C_CONST .)
    LAND            reduce using rule 67 (expression -> C_CONST .)
    <               reduce using rule 67 (expression -> C_CONST .)
    >               reduce using rule 67 (expression -> C_CONST .)
    GE              reduce using rule 67 (expression -> C_CONST .)
    LE              reduce using rule 67 (expression -> C_CONST .)
    ;               reduce using rule 67 (expression -> C_CONST .)
    )               reduce using rule 67 (expression -> C_CONST .)
    ,               reduce using rule 67 (expression -> C_CONST .)
    ]               reduce using rule 67 (expression -> C_CONST .)
    }               reduce using rule 67 (expression -> C_CONST .)


state 36

    (68) expression -> eq_exp .

    +               reduce using rule 68 (expression -> eq_exp .)
    -               reduce using rule 68 (expression -> eq_exp .)
    *               reduce using rule 68 (expression -> eq_exp .)
    /               reduce using rule 68 (expression -> eq_exp .)
    &               reduce using rule 68 (expression -> eq_exp .)
    |               reduce using rule 68 (expression -> eq_exp .)
    ^               reduce using rule 68 (expression -> eq_exp .)
    EQ              reduce using rule 68 (expression -> eq_exp .)
    NE              reduce using rule 68 (expression -> eq_exp .)
    LOR             reduce using rule 68 (expression -> eq_exp .)
    LAND            reduce using rule 68 (expression -> eq_exp .)
    <               reduce using rule 68 (expression -> eq_exp .)
    >               reduce using rule 68 (expression -> eq_exp .)
    GE              reduce using rule 68 (expression -> eq_exp .)
    LE              reduce using rule 68 (expression -> eq_exp .)
    ;               reduce using rule 68 (expression -> eq_exp .)
    )               reduce using rule 68 (expression -> eq_exp .)
    ,               reduce using rule 68 (expression -> eq_exp .)
    ]               reduce using rule 68 (expression -> eq_exp .)
    }               reduce using rule 68 (expression -> eq_exp .)


state 37

    (27) declaration -> declaration_specifier ID . [ NUMBER ] = { expression_list }
    (28) declaration -> declaration_specifier ID . [ NUMBER ]
    (29) declaration -> declaration_specifier ID . = expression
    (30) declaration -> declaration_specifier ID .

    [               shift and go to state 16
    =               shift and go to state 17
    )               reduce using rule 30 (declaration -> declaration_specifier ID .)
    ,               reduce using rule 30 (declaration -> declaration_specifier ID .)
    ;               reduce using rule 30 (declaration -> declaration_specifier ID .)


state 38

    (5) fun_def -> declaration_specifier ID ( ) compound_statement .

    VOID            reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)
    INT             reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)
    CHAR            reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)
    $end            reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)


state 39

    (77) compound_statement -> { . statement_list }
    (78) compound_statement -> { . }
    (79) statement_list -> . statement
    (80) statement_list -> . statement_list statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (18) statement -> . RETURN expression ;
    (19) statement -> . RETURN ;
    (20) statement -> . BREAK ;
    (21) statement -> . CONTINUE ;
    (22) statement -> . WHILE ( expression ) statement
    (23) statement -> . DO statement WHILE ( expression ) ;
    (24) statement -> . FOR ( expression ; expression ; expression ) statement
    (25) statement -> . IF ( expression ) statement
    (26) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    }               shift and go to state 79
    RETURN          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    IF              shift and go to state 90
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35
    {               shift and go to state 39
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    statement_list                 shift and go to state 78
    statement                      shift and go to state 80
    expression                     shift and go to state 81
    declaration                    shift and go to state 82
    compound_statement             shift and go to state 83
    eq_exp                         shift and go to state 36
    declaration_specifier          shift and go to state 19

state 40

    (6) fun_def -> declaration_specifier ID ( declaration_list ) . compound_statement
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }

    {               shift and go to state 39

    compound_statement             shift and go to state 91

state 41

    (46) declaration_list -> declaration_list , . declaration
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    declaration                    shift and go to state 92
    declaration_specifier          shift and go to state 19

state 42

    (27) declaration -> declaration_specifier ID [ NUMBER ] . = { expression_list }
    (28) declaration -> declaration_specifier ID [ NUMBER ] .

    =               shift and go to state 93
    ;               reduce using rule 28 (declaration -> declaration_specifier ID [ NUMBER ] .)
    )               reduce using rule 28 (declaration -> declaration_specifier ID [ NUMBER ] .)
    ,               reduce using rule 28 (declaration -> declaration_specifier ID [ NUMBER ] .)


state 43

    (10) expression -> ID ( . )
    (11) expression -> ID ( . expression_list )
    (43) expression_list -> . expression
    (44) expression_list -> . expression_list , expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    )               shift and go to state 94
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression_list                shift and go to state 95
    expression                     shift and go to state 96
    eq_exp                         shift and go to state 36

state 44

    (32) expression -> ID MINUSMINUS .

    +               reduce using rule 32 (expression -> ID MINUSMINUS .)
    -               reduce using rule 32 (expression -> ID MINUSMINUS .)
    *               reduce using rule 32 (expression -> ID MINUSMINUS .)
    /               reduce using rule 32 (expression -> ID MINUSMINUS .)
    &               reduce using rule 32 (expression -> ID MINUSMINUS .)
    |               reduce using rule 32 (expression -> ID MINUSMINUS .)
    ^               reduce using rule 32 (expression -> ID MINUSMINUS .)
    EQ              reduce using rule 32 (expression -> ID MINUSMINUS .)
    NE              reduce using rule 32 (expression -> ID MINUSMINUS .)
    LOR             reduce using rule 32 (expression -> ID MINUSMINUS .)
    LAND            reduce using rule 32 (expression -> ID MINUSMINUS .)
    <               reduce using rule 32 (expression -> ID MINUSMINUS .)
    >               reduce using rule 32 (expression -> ID MINUSMINUS .)
    GE              reduce using rule 32 (expression -> ID MINUSMINUS .)
    LE              reduce using rule 32 (expression -> ID MINUSMINUS .)
    ;               reduce using rule 32 (expression -> ID MINUSMINUS .)
    )               reduce using rule 32 (expression -> ID MINUSMINUS .)
    ,               reduce using rule 32 (expression -> ID MINUSMINUS .)
    ]               reduce using rule 32 (expression -> ID MINUSMINUS .)
    }               reduce using rule 32 (expression -> ID MINUSMINUS .)


state 45

    (34) expression -> ID PLUSPLUS .

    +               reduce using rule 34 (expression -> ID PLUSPLUS .)
    -               reduce using rule 34 (expression -> ID PLUSPLUS .)
    *               reduce using rule 34 (expression -> ID PLUSPLUS .)
    /               reduce using rule 34 (expression -> ID PLUSPLUS .)
    &               reduce using rule 34 (expression -> ID PLUSPLUS .)
    |               reduce using rule 34 (expression -> ID PLUSPLUS .)
    ^               reduce using rule 34 (expression -> ID PLUSPLUS .)
    EQ              reduce using rule 34 (expression -> ID PLUSPLUS .)
    NE              reduce using rule 34 (expression -> ID PLUSPLUS .)
    LOR             reduce using rule 34 (expression -> ID PLUSPLUS .)
    LAND            reduce using rule 34 (expression -> ID PLUSPLUS .)
    <               reduce using rule 34 (expression -> ID PLUSPLUS .)
    >               reduce using rule 34 (expression -> ID PLUSPLUS .)
    GE              reduce using rule 34 (expression -> ID PLUSPLUS .)
    LE              reduce using rule 34 (expression -> ID PLUSPLUS .)
    ;               reduce using rule 34 (expression -> ID PLUSPLUS .)
    )               reduce using rule 34 (expression -> ID PLUSPLUS .)
    ,               reduce using rule 34 (expression -> ID PLUSPLUS .)
    ]               reduce using rule 34 (expression -> ID PLUSPLUS .)
    }               reduce using rule 34 (expression -> ID PLUSPLUS .)


state 46

    (35) expression -> ID XOREQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 97
    eq_exp                         shift and go to state 36

state 47

    (36) expression -> ID ANDEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 98
    eq_exp                         shift and go to state 36

state 48

    (37) expression -> ID OREQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 99
    eq_exp                         shift and go to state 36

state 49

    (38) expression -> ID TIMESEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 100
    eq_exp                         shift and go to state 36

state 50

    (39) expression -> ID DIVEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 101
    eq_exp                         shift and go to state 36

state 51

    (40) expression -> ID PLUSEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 102
    eq_exp                         shift and go to state 36

state 52

    (41) expression -> ID MINUSEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 103
    eq_exp                         shift and go to state 36

state 53

    (42) expression -> ID = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 104
    eq_exp                         shift and go to state 36

state 54

    (57) expression -> ID [ . expression ]
    (58) expression -> ID [ . expression ] = expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 105
    eq_exp                         shift and go to state 36

state 55

    (47) expression -> expression + . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 106
    eq_exp                         shift and go to state 36

state 56

    (48) expression -> expression - . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 107
    eq_exp                         shift and go to state 36

state 57

    (49) expression -> expression * . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 108
    eq_exp                         shift and go to state 36

state 58

    (50) expression -> expression / . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 109
    eq_exp                         shift and go to state 36

state 59

    (51) expression -> expression & . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 110
    eq_exp                         shift and go to state 36

state 60

    (52) expression -> expression | . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 111
    eq_exp                         shift and go to state 36

state 61

    (53) expression -> expression ^ . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 112
    eq_exp                         shift and go to state 36

state 62

    (69) eq_exp -> expression EQ . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 113
    eq_exp                         shift and go to state 36

state 63

    (70) eq_exp -> expression NE . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 114
    eq_exp                         shift and go to state 36

state 64

    (71) eq_exp -> expression LOR . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 115
    eq_exp                         shift and go to state 36

state 65

    (72) eq_exp -> expression LAND . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 116
    eq_exp                         shift and go to state 36

state 66

    (73) eq_exp -> expression < . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 117
    eq_exp                         shift and go to state 36

state 67

    (74) eq_exp -> expression > . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 118
    eq_exp                         shift and go to state 36

state 68

    (75) eq_exp -> expression GE . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 119
    eq_exp                         shift and go to state 36

state 69

    (76) eq_exp -> expression LE . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 120
    eq_exp                         shift and go to state 36

state 70

    (56) expression -> ( expression . )
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    )               shift and go to state 121
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 71

    (12) expression -> PRINTSTR ( . S_CONST )

    S_CONST         shift and go to state 122


state 72

    (31) expression -> MINUSMINUS ID .

    +               reduce using rule 31 (expression -> MINUSMINUS ID .)
    -               reduce using rule 31 (expression -> MINUSMINUS ID .)
    *               reduce using rule 31 (expression -> MINUSMINUS ID .)
    /               reduce using rule 31 (expression -> MINUSMINUS ID .)
    &               reduce using rule 31 (expression -> MINUSMINUS ID .)
    |               reduce using rule 31 (expression -> MINUSMINUS ID .)
    ^               reduce using rule 31 (expression -> MINUSMINUS ID .)
    EQ              reduce using rule 31 (expression -> MINUSMINUS ID .)
    NE              reduce using rule 31 (expression -> MINUSMINUS ID .)
    LOR             reduce using rule 31 (expression -> MINUSMINUS ID .)
    LAND            reduce using rule 31 (expression -> MINUSMINUS ID .)
    <               reduce using rule 31 (expression -> MINUSMINUS ID .)
    >               reduce using rule 31 (expression -> MINUSMINUS ID .)
    GE              reduce using rule 31 (expression -> MINUSMINUS ID .)
    LE              reduce using rule 31 (expression -> MINUSMINUS ID .)
    ;               reduce using rule 31 (expression -> MINUSMINUS ID .)
    )               reduce using rule 31 (expression -> MINUSMINUS ID .)
    ,               reduce using rule 31 (expression -> MINUSMINUS ID .)
    ]               reduce using rule 31 (expression -> MINUSMINUS ID .)
    }               reduce using rule 31 (expression -> MINUSMINUS ID .)


state 73

    (33) expression -> PLUSPLUS ID .

    +               reduce using rule 33 (expression -> PLUSPLUS ID .)
    -               reduce using rule 33 (expression -> PLUSPLUS ID .)
    *               reduce using rule 33 (expression -> PLUSPLUS ID .)
    /               reduce using rule 33 (expression -> PLUSPLUS ID .)
    &               reduce using rule 33 (expression -> PLUSPLUS ID .)
    |               reduce using rule 33 (expression -> PLUSPLUS ID .)
    ^               reduce using rule 33 (expression -> PLUSPLUS ID .)
    EQ              reduce using rule 33 (expression -> PLUSPLUS ID .)
    NE              reduce using rule 33 (expression -> PLUSPLUS ID .)
    LOR             reduce using rule 33 (expression -> PLUSPLUS ID .)
    LAND            reduce using rule 33 (expression -> PLUSPLUS ID .)
    <               reduce using rule 33 (expression -> PLUSPLUS ID .)
    >               reduce using rule 33 (expression -> PLUSPLUS ID .)
    GE              reduce using rule 33 (expression -> PLUSPLUS ID .)
    LE              reduce using rule 33 (expression -> PLUSPLUS ID .)
    ;               reduce using rule 33 (expression -> PLUSPLUS ID .)
    )               reduce using rule 33 (expression -> PLUSPLUS ID .)
    ,               reduce using rule 33 (expression -> PLUSPLUS ID .)
    ]               reduce using rule 33 (expression -> PLUSPLUS ID .)
    }               reduce using rule 33 (expression -> PLUSPLUS ID .)


state 74

    (55) expression -> - expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    +               reduce using rule 55 (expression -> - expression .)
    -               reduce using rule 55 (expression -> - expression .)
    *               reduce using rule 55 (expression -> - expression .)
    /               reduce using rule 55 (expression -> - expression .)
    &               reduce using rule 55 (expression -> - expression .)
    |               reduce using rule 55 (expression -> - expression .)
    ^               reduce using rule 55 (expression -> - expression .)
    EQ              reduce using rule 55 (expression -> - expression .)
    NE              reduce using rule 55 (expression -> - expression .)
    LOR             reduce using rule 55 (expression -> - expression .)
    LAND            reduce using rule 55 (expression -> - expression .)
    <               reduce using rule 55 (expression -> - expression .)
    >               reduce using rule 55 (expression -> - expression .)
    GE              reduce using rule 55 (expression -> - expression .)
    LE              reduce using rule 55 (expression -> - expression .)
    ;               reduce using rule 55 (expression -> - expression .)
    )               reduce using rule 55 (expression -> - expression .)
    ,               reduce using rule 55 (expression -> - expression .)
    ]               reduce using rule 55 (expression -> - expression .)
    }               reduce using rule 55 (expression -> - expression .)

  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! &               [ shift and go to state 59 ]
  ! |               [ shift and go to state 60 ]
  ! ^               [ shift and go to state 61 ]
  ! EQ              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! LOR             [ shift and go to state 64 ]
  ! LAND            [ shift and go to state 65 ]
  ! <               [ shift and go to state 66 ]
  ! >               [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 69 ]


state 75

    (63) expression -> * ID . = expression
    (64) expression -> * ID .

    =               shift and go to state 123
    +               reduce using rule 64 (expression -> * ID .)
    -               reduce using rule 64 (expression -> * ID .)
    *               reduce using rule 64 (expression -> * ID .)
    /               reduce using rule 64 (expression -> * ID .)
    &               reduce using rule 64 (expression -> * ID .)
    |               reduce using rule 64 (expression -> * ID .)
    ^               reduce using rule 64 (expression -> * ID .)
    EQ              reduce using rule 64 (expression -> * ID .)
    NE              reduce using rule 64 (expression -> * ID .)
    LOR             reduce using rule 64 (expression -> * ID .)
    LAND            reduce using rule 64 (expression -> * ID .)
    <               reduce using rule 64 (expression -> * ID .)
    >               reduce using rule 64 (expression -> * ID .)
    GE              reduce using rule 64 (expression -> * ID .)
    LE              reduce using rule 64 (expression -> * ID .)
    ;               reduce using rule 64 (expression -> * ID .)
    )               reduce using rule 64 (expression -> * ID .)
    ,               reduce using rule 64 (expression -> * ID .)
    ]               reduce using rule 64 (expression -> * ID .)
    }               reduce using rule 64 (expression -> * ID .)


state 76

    (61) expression -> & ID .
    (62) expression -> & ID . [ expression ]

    +               reduce using rule 61 (expression -> & ID .)
    -               reduce using rule 61 (expression -> & ID .)
    *               reduce using rule 61 (expression -> & ID .)
    /               reduce using rule 61 (expression -> & ID .)
    &               reduce using rule 61 (expression -> & ID .)
    |               reduce using rule 61 (expression -> & ID .)
    ^               reduce using rule 61 (expression -> & ID .)
    EQ              reduce using rule 61 (expression -> & ID .)
    NE              reduce using rule 61 (expression -> & ID .)
    LOR             reduce using rule 61 (expression -> & ID .)
    LAND            reduce using rule 61 (expression -> & ID .)
    <               reduce using rule 61 (expression -> & ID .)
    >               reduce using rule 61 (expression -> & ID .)
    GE              reduce using rule 61 (expression -> & ID .)
    LE              reduce using rule 61 (expression -> & ID .)
    ;               reduce using rule 61 (expression -> & ID .)
    )               reduce using rule 61 (expression -> & ID .)
    ,               reduce using rule 61 (expression -> & ID .)
    ]               reduce using rule 61 (expression -> & ID .)
    }               reduce using rule 61 (expression -> & ID .)
    [               shift and go to state 124


state 77

    (54) expression -> ~ expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    +               reduce using rule 54 (expression -> ~ expression .)
    -               reduce using rule 54 (expression -> ~ expression .)
    *               reduce using rule 54 (expression -> ~ expression .)
    /               reduce using rule 54 (expression -> ~ expression .)
    &               reduce using rule 54 (expression -> ~ expression .)
    |               reduce using rule 54 (expression -> ~ expression .)
    ^               reduce using rule 54 (expression -> ~ expression .)
    EQ              reduce using rule 54 (expression -> ~ expression .)
    NE              reduce using rule 54 (expression -> ~ expression .)
    LOR             reduce using rule 54 (expression -> ~ expression .)
    LAND            reduce using rule 54 (expression -> ~ expression .)
    <               reduce using rule 54 (expression -> ~ expression .)
    >               reduce using rule 54 (expression -> ~ expression .)
    GE              reduce using rule 54 (expression -> ~ expression .)
    LE              reduce using rule 54 (expression -> ~ expression .)
    ;               reduce using rule 54 (expression -> ~ expression .)
    )               reduce using rule 54 (expression -> ~ expression .)
    ,               reduce using rule 54 (expression -> ~ expression .)
    ]               reduce using rule 54 (expression -> ~ expression .)
    }               reduce using rule 54 (expression -> ~ expression .)

  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! &               [ shift and go to state 59 ]
  ! |               [ shift and go to state 60 ]
  ! ^               [ shift and go to state 61 ]
  ! EQ              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! LOR             [ shift and go to state 64 ]
  ! LAND            [ shift and go to state 65 ]
  ! <               [ shift and go to state 66 ]
  ! >               [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 69 ]


state 78

    (77) compound_statement -> { statement_list . }
    (80) statement_list -> statement_list . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (18) statement -> . RETURN expression ;
    (19) statement -> . RETURN ;
    (20) statement -> . BREAK ;
    (21) statement -> . CONTINUE ;
    (22) statement -> . WHILE ( expression ) statement
    (23) statement -> . DO statement WHILE ( expression ) ;
    (24) statement -> . FOR ( expression ; expression ; expression ) statement
    (25) statement -> . IF ( expression ) statement
    (26) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    }               shift and go to state 125
    RETURN          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    IF              shift and go to state 90
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35
    {               shift and go to state 39
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    statement                      shift and go to state 126
    expression                     shift and go to state 81
    declaration                    shift and go to state 82
    compound_statement             shift and go to state 83
    eq_exp                         shift and go to state 36
    declaration_specifier          shift and go to state 19

state 79

    (78) compound_statement -> { } .

    VOID            reduce using rule 78 (compound_statement -> { } .)
    INT             reduce using rule 78 (compound_statement -> { } .)
    CHAR            reduce using rule 78 (compound_statement -> { } .)
    $end            reduce using rule 78 (compound_statement -> { } .)
    }               reduce using rule 78 (compound_statement -> { } .)
    RETURN          reduce using rule 78 (compound_statement -> { } .)
    BREAK           reduce using rule 78 (compound_statement -> { } .)
    CONTINUE        reduce using rule 78 (compound_statement -> { } .)
    WHILE           reduce using rule 78 (compound_statement -> { } .)
    DO              reduce using rule 78 (compound_statement -> { } .)
    FOR             reduce using rule 78 (compound_statement -> { } .)
    IF              reduce using rule 78 (compound_statement -> { } .)
    ID              reduce using rule 78 (compound_statement -> { } .)
    PRINTSTR        reduce using rule 78 (compound_statement -> { } .)
    MINUSMINUS      reduce using rule 78 (compound_statement -> { } .)
    PLUSPLUS        reduce using rule 78 (compound_statement -> { } .)
    ~               reduce using rule 78 (compound_statement -> { } .)
    -               reduce using rule 78 (compound_statement -> { } .)
    (               reduce using rule 78 (compound_statement -> { } .)
    NUMBER          reduce using rule 78 (compound_statement -> { } .)
    &               reduce using rule 78 (compound_statement -> { } .)
    *               reduce using rule 78 (compound_statement -> { } .)
    C_CONST         reduce using rule 78 (compound_statement -> { } .)
    {               reduce using rule 78 (compound_statement -> { } .)
    ELSE            reduce using rule 78 (compound_statement -> { } .)


state 80

    (79) statement_list -> statement .

    }               reduce using rule 79 (statement_list -> statement .)
    RETURN          reduce using rule 79 (statement_list -> statement .)
    BREAK           reduce using rule 79 (statement_list -> statement .)
    CONTINUE        reduce using rule 79 (statement_list -> statement .)
    WHILE           reduce using rule 79 (statement_list -> statement .)
    DO              reduce using rule 79 (statement_list -> statement .)
    FOR             reduce using rule 79 (statement_list -> statement .)
    IF              reduce using rule 79 (statement_list -> statement .)
    ID              reduce using rule 79 (statement_list -> statement .)
    PRINTSTR        reduce using rule 79 (statement_list -> statement .)
    MINUSMINUS      reduce using rule 79 (statement_list -> statement .)
    PLUSPLUS        reduce using rule 79 (statement_list -> statement .)
    ~               reduce using rule 79 (statement_list -> statement .)
    -               reduce using rule 79 (statement_list -> statement .)
    (               reduce using rule 79 (statement_list -> statement .)
    NUMBER          reduce using rule 79 (statement_list -> statement .)
    &               reduce using rule 79 (statement_list -> statement .)
    *               reduce using rule 79 (statement_list -> statement .)
    C_CONST         reduce using rule 79 (statement_list -> statement .)
    {               reduce using rule 79 (statement_list -> statement .)
    VOID            reduce using rule 79 (statement_list -> statement .)
    INT             reduce using rule 79 (statement_list -> statement .)
    CHAR            reduce using rule 79 (statement_list -> statement .)


state 81

    (7) statement -> expression . ;
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    ;               shift and go to state 127
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 82

    (8) statement -> declaration . ;

    ;               shift and go to state 128


state 83

    (9) statement -> compound_statement .

    }               reduce using rule 9 (statement -> compound_statement .)
    RETURN          reduce using rule 9 (statement -> compound_statement .)
    BREAK           reduce using rule 9 (statement -> compound_statement .)
    CONTINUE        reduce using rule 9 (statement -> compound_statement .)
    WHILE           reduce using rule 9 (statement -> compound_statement .)
    DO              reduce using rule 9 (statement -> compound_statement .)
    FOR             reduce using rule 9 (statement -> compound_statement .)
    IF              reduce using rule 9 (statement -> compound_statement .)
    ID              reduce using rule 9 (statement -> compound_statement .)
    PRINTSTR        reduce using rule 9 (statement -> compound_statement .)
    MINUSMINUS      reduce using rule 9 (statement -> compound_statement .)
    PLUSPLUS        reduce using rule 9 (statement -> compound_statement .)
    ~               reduce using rule 9 (statement -> compound_statement .)
    -               reduce using rule 9 (statement -> compound_statement .)
    (               reduce using rule 9 (statement -> compound_statement .)
    NUMBER          reduce using rule 9 (statement -> compound_statement .)
    &               reduce using rule 9 (statement -> compound_statement .)
    *               reduce using rule 9 (statement -> compound_statement .)
    C_CONST         reduce using rule 9 (statement -> compound_statement .)
    {               reduce using rule 9 (statement -> compound_statement .)
    VOID            reduce using rule 9 (statement -> compound_statement .)
    INT             reduce using rule 9 (statement -> compound_statement .)
    CHAR            reduce using rule 9 (statement -> compound_statement .)
    ELSE            reduce using rule 9 (statement -> compound_statement .)


state 84

    (18) statement -> RETURN . expression ;
    (19) statement -> RETURN . ;
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ;               shift and go to state 130
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 129
    eq_exp                         shift and go to state 36

state 85

    (20) statement -> BREAK . ;

    ;               shift and go to state 131


state 86

    (21) statement -> CONTINUE . ;

    ;               shift and go to state 132


state 87

    (22) statement -> WHILE . ( expression ) statement

    (               shift and go to state 133


state 88

    (23) statement -> DO . statement WHILE ( expression ) ;
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (18) statement -> . RETURN expression ;
    (19) statement -> . RETURN ;
    (20) statement -> . BREAK ;
    (21) statement -> . CONTINUE ;
    (22) statement -> . WHILE ( expression ) statement
    (23) statement -> . DO statement WHILE ( expression ) ;
    (24) statement -> . FOR ( expression ; expression ; expression ) statement
    (25) statement -> . IF ( expression ) statement
    (26) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    RETURN          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    IF              shift and go to state 90
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35
    {               shift and go to state 39
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    statement                      shift and go to state 134
    expression                     shift and go to state 81
    declaration                    shift and go to state 82
    compound_statement             shift and go to state 83
    eq_exp                         shift and go to state 36
    declaration_specifier          shift and go to state 19

state 89

    (24) statement -> FOR . ( expression ; expression ; expression ) statement

    (               shift and go to state 135


state 90

    (25) statement -> IF . ( expression ) statement
    (26) statement -> IF . ( expression ) statement ELSE statement

    (               shift and go to state 136


state 91

    (6) fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .

    VOID            reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)
    INT             reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)
    CHAR            reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)
    $end            reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)


state 92

    (46) declaration_list -> declaration_list , declaration .

    )               reduce using rule 46 (declaration_list -> declaration_list , declaration .)
    ,               reduce using rule 46 (declaration_list -> declaration_list , declaration .)


state 93

    (27) declaration -> declaration_specifier ID [ NUMBER ] = . { expression_list }

    {               shift and go to state 137


state 94

    (10) expression -> ID ( ) .

    +               reduce using rule 10 (expression -> ID ( ) .)
    -               reduce using rule 10 (expression -> ID ( ) .)
    *               reduce using rule 10 (expression -> ID ( ) .)
    /               reduce using rule 10 (expression -> ID ( ) .)
    &               reduce using rule 10 (expression -> ID ( ) .)
    |               reduce using rule 10 (expression -> ID ( ) .)
    ^               reduce using rule 10 (expression -> ID ( ) .)
    EQ              reduce using rule 10 (expression -> ID ( ) .)
    NE              reduce using rule 10 (expression -> ID ( ) .)
    LOR             reduce using rule 10 (expression -> ID ( ) .)
    LAND            reduce using rule 10 (expression -> ID ( ) .)
    <               reduce using rule 10 (expression -> ID ( ) .)
    >               reduce using rule 10 (expression -> ID ( ) .)
    GE              reduce using rule 10 (expression -> ID ( ) .)
    LE              reduce using rule 10 (expression -> ID ( ) .)
    ;               reduce using rule 10 (expression -> ID ( ) .)
    )               reduce using rule 10 (expression -> ID ( ) .)
    ,               reduce using rule 10 (expression -> ID ( ) .)
    ]               reduce using rule 10 (expression -> ID ( ) .)
    }               reduce using rule 10 (expression -> ID ( ) .)


state 95

    (11) expression -> ID ( expression_list . )
    (44) expression_list -> expression_list . , expression

    )               shift and go to state 138
    ,               shift and go to state 139


state 96

    (43) expression_list -> expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    )               reduce using rule 43 (expression_list -> expression .)
    ,               reduce using rule 43 (expression_list -> expression .)
    }               reduce using rule 43 (expression_list -> expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 97

    (35) expression -> ID XOREQUAL expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 35 (expression -> ID XOREQUAL expression .)
    )               reduce using rule 35 (expression -> ID XOREQUAL expression .)
    ,               reduce using rule 35 (expression -> ID XOREQUAL expression .)
    ]               reduce using rule 35 (expression -> ID XOREQUAL expression .)
    }               reduce using rule 35 (expression -> ID XOREQUAL expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! -               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! *               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! /               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! &               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! |               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! ^               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! NE              [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! LOR             [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! LAND            [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! <               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! >               [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! GE              [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]
  ! LE              [ reduce using rule 35 (expression -> ID XOREQUAL expression .) ]


state 98

    (36) expression -> ID ANDEQUAL expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 36 (expression -> ID ANDEQUAL expression .)
    )               reduce using rule 36 (expression -> ID ANDEQUAL expression .)
    ,               reduce using rule 36 (expression -> ID ANDEQUAL expression .)
    ]               reduce using rule 36 (expression -> ID ANDEQUAL expression .)
    }               reduce using rule 36 (expression -> ID ANDEQUAL expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! -               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! *               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! /               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! &               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! |               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! ^               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! NE              [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! LOR             [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! LAND            [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! <               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! >               [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! GE              [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]
  ! LE              [ reduce using rule 36 (expression -> ID ANDEQUAL expression .) ]


state 99

    (37) expression -> ID OREQUAL expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 37 (expression -> ID OREQUAL expression .)
    )               reduce using rule 37 (expression -> ID OREQUAL expression .)
    ,               reduce using rule 37 (expression -> ID OREQUAL expression .)
    ]               reduce using rule 37 (expression -> ID OREQUAL expression .)
    }               reduce using rule 37 (expression -> ID OREQUAL expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! -               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! *               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! /               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! &               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! |               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! ^               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! EQ              [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! NE              [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! LOR             [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! LAND            [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! <               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! >               [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! GE              [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]
  ! LE              [ reduce using rule 37 (expression -> ID OREQUAL expression .) ]


state 100

    (38) expression -> ID TIMESEQUAL expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 38 (expression -> ID TIMESEQUAL expression .)
    )               reduce using rule 38 (expression -> ID TIMESEQUAL expression .)
    ,               reduce using rule 38 (expression -> ID TIMESEQUAL expression .)
    ]               reduce using rule 38 (expression -> ID TIMESEQUAL expression .)
    }               reduce using rule 38 (expression -> ID TIMESEQUAL expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! -               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! *               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! /               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! &               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! |               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! ^               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! NE              [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! LOR             [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! LAND            [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! <               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! >               [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! GE              [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]
  ! LE              [ reduce using rule 38 (expression -> ID TIMESEQUAL expression .) ]


state 101

    (39) expression -> ID DIVEQUAL expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 39 (expression -> ID DIVEQUAL expression .)
    )               reduce using rule 39 (expression -> ID DIVEQUAL expression .)
    ,               reduce using rule 39 (expression -> ID DIVEQUAL expression .)
    ]               reduce using rule 39 (expression -> ID DIVEQUAL expression .)
    }               reduce using rule 39 (expression -> ID DIVEQUAL expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! -               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! *               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! /               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! &               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! |               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! ^               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! NE              [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! LOR             [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! LAND            [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! <               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! >               [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! GE              [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]
  ! LE              [ reduce using rule 39 (expression -> ID DIVEQUAL expression .) ]


state 102

    (40) expression -> ID PLUSEQUAL expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 40 (expression -> ID PLUSEQUAL expression .)
    )               reduce using rule 40 (expression -> ID PLUSEQUAL expression .)
    ,               reduce using rule 40 (expression -> ID PLUSEQUAL expression .)
    ]               reduce using rule 40 (expression -> ID PLUSEQUAL expression .)
    }               reduce using rule 40 (expression -> ID PLUSEQUAL expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! -               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! *               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! /               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! &               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! |               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! ^               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! NE              [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! LOR             [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! LAND            [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! <               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! >               [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! GE              [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]
  ! LE              [ reduce using rule 40 (expression -> ID PLUSEQUAL expression .) ]


state 103

    (41) expression -> ID MINUSEQUAL expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 41 (expression -> ID MINUSEQUAL expression .)
    )               reduce using rule 41 (expression -> ID MINUSEQUAL expression .)
    ,               reduce using rule 41 (expression -> ID MINUSEQUAL expression .)
    ]               reduce using rule 41 (expression -> ID MINUSEQUAL expression .)
    }               reduce using rule 41 (expression -> ID MINUSEQUAL expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! -               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! *               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! /               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! &               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! |               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! ^               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! NE              [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! LOR             [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! LAND            [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! <               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! >               [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! GE              [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]
  ! LE              [ reduce using rule 41 (expression -> ID MINUSEQUAL expression .) ]


state 104

    (42) expression -> ID = expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 42 (expression -> ID = expression .)
    )               reduce using rule 42 (expression -> ID = expression .)
    ,               reduce using rule 42 (expression -> ID = expression .)
    ]               reduce using rule 42 (expression -> ID = expression .)
    }               reduce using rule 42 (expression -> ID = expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! -               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! *               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! /               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! &               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! |               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! ^               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> ID = expression .) ]
  ! NE              [ reduce using rule 42 (expression -> ID = expression .) ]
  ! LOR             [ reduce using rule 42 (expression -> ID = expression .) ]
  ! LAND            [ reduce using rule 42 (expression -> ID = expression .) ]
  ! <               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! >               [ reduce using rule 42 (expression -> ID = expression .) ]
  ! GE              [ reduce using rule 42 (expression -> ID = expression .) ]
  ! LE              [ reduce using rule 42 (expression -> ID = expression .) ]


state 105

    (57) expression -> ID [ expression . ]
    (58) expression -> ID [ expression . ] = expression
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    ]               shift and go to state 140
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 106

    (47) expression -> expression + expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    +               reduce using rule 47 (expression -> expression + expression .)
    -               reduce using rule 47 (expression -> expression + expression .)
    &               reduce using rule 47 (expression -> expression + expression .)
    |               reduce using rule 47 (expression -> expression + expression .)
    ^               reduce using rule 47 (expression -> expression + expression .)
    EQ              reduce using rule 47 (expression -> expression + expression .)
    NE              reduce using rule 47 (expression -> expression + expression .)
    LOR             reduce using rule 47 (expression -> expression + expression .)
    LAND            reduce using rule 47 (expression -> expression + expression .)
    <               reduce using rule 47 (expression -> expression + expression .)
    >               reduce using rule 47 (expression -> expression + expression .)
    GE              reduce using rule 47 (expression -> expression + expression .)
    LE              reduce using rule 47 (expression -> expression + expression .)
    ;               reduce using rule 47 (expression -> expression + expression .)
    )               reduce using rule 47 (expression -> expression + expression .)
    ,               reduce using rule 47 (expression -> expression + expression .)
    ]               reduce using rule 47 (expression -> expression + expression .)
    }               reduce using rule 47 (expression -> expression + expression .)
    *               shift and go to state 57
    /               shift and go to state 58

  ! *               [ reduce using rule 47 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 47 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! &               [ shift and go to state 59 ]
  ! |               [ shift and go to state 60 ]
  ! ^               [ shift and go to state 61 ]
  ! EQ              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! LOR             [ shift and go to state 64 ]
  ! LAND            [ shift and go to state 65 ]
  ! <               [ shift and go to state 66 ]
  ! >               [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 69 ]


state 107

    (48) expression -> expression - expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    +               reduce using rule 48 (expression -> expression - expression .)
    -               reduce using rule 48 (expression -> expression - expression .)
    &               reduce using rule 48 (expression -> expression - expression .)
    |               reduce using rule 48 (expression -> expression - expression .)
    ^               reduce using rule 48 (expression -> expression - expression .)
    EQ              reduce using rule 48 (expression -> expression - expression .)
    NE              reduce using rule 48 (expression -> expression - expression .)
    LOR             reduce using rule 48 (expression -> expression - expression .)
    LAND            reduce using rule 48 (expression -> expression - expression .)
    <               reduce using rule 48 (expression -> expression - expression .)
    >               reduce using rule 48 (expression -> expression - expression .)
    GE              reduce using rule 48 (expression -> expression - expression .)
    LE              reduce using rule 48 (expression -> expression - expression .)
    ;               reduce using rule 48 (expression -> expression - expression .)
    )               reduce using rule 48 (expression -> expression - expression .)
    ,               reduce using rule 48 (expression -> expression - expression .)
    ]               reduce using rule 48 (expression -> expression - expression .)
    }               reduce using rule 48 (expression -> expression - expression .)
    *               shift and go to state 57
    /               shift and go to state 58

  ! *               [ reduce using rule 48 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 48 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! &               [ shift and go to state 59 ]
  ! |               [ shift and go to state 60 ]
  ! ^               [ shift and go to state 61 ]
  ! EQ              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! LOR             [ shift and go to state 64 ]
  ! LAND            [ shift and go to state 65 ]
  ! <               [ shift and go to state 66 ]
  ! >               [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 69 ]


state 108

    (49) expression -> expression * expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    +               reduce using rule 49 (expression -> expression * expression .)
    -               reduce using rule 49 (expression -> expression * expression .)
    *               reduce using rule 49 (expression -> expression * expression .)
    /               reduce using rule 49 (expression -> expression * expression .)
    &               reduce using rule 49 (expression -> expression * expression .)
    |               reduce using rule 49 (expression -> expression * expression .)
    ^               reduce using rule 49 (expression -> expression * expression .)
    EQ              reduce using rule 49 (expression -> expression * expression .)
    NE              reduce using rule 49 (expression -> expression * expression .)
    LOR             reduce using rule 49 (expression -> expression * expression .)
    LAND            reduce using rule 49 (expression -> expression * expression .)
    <               reduce using rule 49 (expression -> expression * expression .)
    >               reduce using rule 49 (expression -> expression * expression .)
    GE              reduce using rule 49 (expression -> expression * expression .)
    LE              reduce using rule 49 (expression -> expression * expression .)
    ;               reduce using rule 49 (expression -> expression * expression .)
    )               reduce using rule 49 (expression -> expression * expression .)
    ,               reduce using rule 49 (expression -> expression * expression .)
    ]               reduce using rule 49 (expression -> expression * expression .)
    }               reduce using rule 49 (expression -> expression * expression .)

  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! &               [ shift and go to state 59 ]
  ! |               [ shift and go to state 60 ]
  ! ^               [ shift and go to state 61 ]
  ! EQ              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! LOR             [ shift and go to state 64 ]
  ! LAND            [ shift and go to state 65 ]
  ! <               [ shift and go to state 66 ]
  ! >               [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 69 ]


state 109

    (50) expression -> expression / expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    +               reduce using rule 50 (expression -> expression / expression .)
    -               reduce using rule 50 (expression -> expression / expression .)
    *               reduce using rule 50 (expression -> expression / expression .)
    /               reduce using rule 50 (expression -> expression / expression .)
    &               reduce using rule 50 (expression -> expression / expression .)
    |               reduce using rule 50 (expression -> expression / expression .)
    ^               reduce using rule 50 (expression -> expression / expression .)
    EQ              reduce using rule 50 (expression -> expression / expression .)
    NE              reduce using rule 50 (expression -> expression / expression .)
    LOR             reduce using rule 50 (expression -> expression / expression .)
    LAND            reduce using rule 50 (expression -> expression / expression .)
    <               reduce using rule 50 (expression -> expression / expression .)
    >               reduce using rule 50 (expression -> expression / expression .)
    GE              reduce using rule 50 (expression -> expression / expression .)
    LE              reduce using rule 50 (expression -> expression / expression .)
    ;               reduce using rule 50 (expression -> expression / expression .)
    )               reduce using rule 50 (expression -> expression / expression .)
    ,               reduce using rule 50 (expression -> expression / expression .)
    ]               reduce using rule 50 (expression -> expression / expression .)
    }               reduce using rule 50 (expression -> expression / expression .)

  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! &               [ shift and go to state 59 ]
  ! |               [ shift and go to state 60 ]
  ! ^               [ shift and go to state 61 ]
  ! EQ              [ shift and go to state 62 ]
  ! NE              [ shift and go to state 63 ]
  ! LOR             [ shift and go to state 64 ]
  ! LAND            [ shift and go to state 65 ]
  ! <               [ shift and go to state 66 ]
  ! >               [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 69 ]


state 110

    (51) expression -> expression & expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 51 (expression -> expression & expression .)
    )               reduce using rule 51 (expression -> expression & expression .)
    ,               reduce using rule 51 (expression -> expression & expression .)
    ]               reduce using rule 51 (expression -> expression & expression .)
    }               reduce using rule 51 (expression -> expression & expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! -               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! *               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! /               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! &               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! |               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! ^               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! EQ              [ reduce using rule 51 (expression -> expression & expression .) ]
  ! NE              [ reduce using rule 51 (expression -> expression & expression .) ]
  ! LOR             [ reduce using rule 51 (expression -> expression & expression .) ]
  ! LAND            [ reduce using rule 51 (expression -> expression & expression .) ]
  ! <               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! >               [ reduce using rule 51 (expression -> expression & expression .) ]
  ! GE              [ reduce using rule 51 (expression -> expression & expression .) ]
  ! LE              [ reduce using rule 51 (expression -> expression & expression .) ]


state 111

    (52) expression -> expression | expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 52 (expression -> expression | expression .)
    )               reduce using rule 52 (expression -> expression | expression .)
    ,               reduce using rule 52 (expression -> expression | expression .)
    ]               reduce using rule 52 (expression -> expression | expression .)
    }               reduce using rule 52 (expression -> expression | expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! -               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! *               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! /               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! &               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! |               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! ^               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! EQ              [ reduce using rule 52 (expression -> expression | expression .) ]
  ! NE              [ reduce using rule 52 (expression -> expression | expression .) ]
  ! LOR             [ reduce using rule 52 (expression -> expression | expression .) ]
  ! LAND            [ reduce using rule 52 (expression -> expression | expression .) ]
  ! <               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! >               [ reduce using rule 52 (expression -> expression | expression .) ]
  ! GE              [ reduce using rule 52 (expression -> expression | expression .) ]
  ! LE              [ reduce using rule 52 (expression -> expression | expression .) ]


state 112

    (53) expression -> expression ^ expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 53 (expression -> expression ^ expression .)
    )               reduce using rule 53 (expression -> expression ^ expression .)
    ,               reduce using rule 53 (expression -> expression ^ expression .)
    ]               reduce using rule 53 (expression -> expression ^ expression .)
    }               reduce using rule 53 (expression -> expression ^ expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! -               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! *               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! /               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! &               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! |               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! ^               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! NE              [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! LOR             [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! LAND            [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! <               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! >               [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression ^ expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression ^ expression .) ]


state 113

    (69) eq_exp -> expression EQ expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 69 (eq_exp -> expression EQ expression .)
    )               reduce using rule 69 (eq_exp -> expression EQ expression .)
    ,               reduce using rule 69 (eq_exp -> expression EQ expression .)
    ]               reduce using rule 69 (eq_exp -> expression EQ expression .)
    }               reduce using rule 69 (eq_exp -> expression EQ expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! -               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! *               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! /               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! &               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! |               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! ^               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! NE              [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! LOR             [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! LAND            [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! <               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! >               [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! GE              [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]
  ! LE              [ reduce using rule 69 (eq_exp -> expression EQ expression .) ]


state 114

    (70) eq_exp -> expression NE expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 70 (eq_exp -> expression NE expression .)
    )               reduce using rule 70 (eq_exp -> expression NE expression .)
    ,               reduce using rule 70 (eq_exp -> expression NE expression .)
    ]               reduce using rule 70 (eq_exp -> expression NE expression .)
    }               reduce using rule 70 (eq_exp -> expression NE expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! -               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! *               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! /               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! &               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! |               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! ^               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! EQ              [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! NE              [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! LOR             [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! LAND            [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! <               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! >               [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! GE              [ reduce using rule 70 (eq_exp -> expression NE expression .) ]
  ! LE              [ reduce using rule 70 (eq_exp -> expression NE expression .) ]


state 115

    (71) eq_exp -> expression LOR expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 71 (eq_exp -> expression LOR expression .)
    )               reduce using rule 71 (eq_exp -> expression LOR expression .)
    ,               reduce using rule 71 (eq_exp -> expression LOR expression .)
    ]               reduce using rule 71 (eq_exp -> expression LOR expression .)
    }               reduce using rule 71 (eq_exp -> expression LOR expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! -               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! *               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! /               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! &               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! |               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! ^               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! EQ              [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! NE              [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! LOR             [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! LAND            [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! <               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! >               [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! GE              [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]
  ! LE              [ reduce using rule 71 (eq_exp -> expression LOR expression .) ]


state 116

    (72) eq_exp -> expression LAND expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 72 (eq_exp -> expression LAND expression .)
    )               reduce using rule 72 (eq_exp -> expression LAND expression .)
    ,               reduce using rule 72 (eq_exp -> expression LAND expression .)
    ]               reduce using rule 72 (eq_exp -> expression LAND expression .)
    }               reduce using rule 72 (eq_exp -> expression LAND expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! -               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! *               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! /               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! &               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! |               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! ^               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! EQ              [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! NE              [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! LOR             [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! LAND            [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! <               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! >               [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! GE              [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]
  ! LE              [ reduce using rule 72 (eq_exp -> expression LAND expression .) ]


state 117

    (73) eq_exp -> expression < expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 73 (eq_exp -> expression < expression .)
    )               reduce using rule 73 (eq_exp -> expression < expression .)
    ,               reduce using rule 73 (eq_exp -> expression < expression .)
    ]               reduce using rule 73 (eq_exp -> expression < expression .)
    }               reduce using rule 73 (eq_exp -> expression < expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! -               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! *               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! /               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! &               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! |               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! ^               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! EQ              [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! NE              [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! LOR             [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! LAND            [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! <               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! >               [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! GE              [ reduce using rule 73 (eq_exp -> expression < expression .) ]
  ! LE              [ reduce using rule 73 (eq_exp -> expression < expression .) ]


state 118

    (74) eq_exp -> expression > expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 74 (eq_exp -> expression > expression .)
    )               reduce using rule 74 (eq_exp -> expression > expression .)
    ,               reduce using rule 74 (eq_exp -> expression > expression .)
    ]               reduce using rule 74 (eq_exp -> expression > expression .)
    }               reduce using rule 74 (eq_exp -> expression > expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! -               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! *               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! /               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! &               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! |               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! ^               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! EQ              [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! NE              [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! LOR             [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! LAND            [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! <               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! >               [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! GE              [ reduce using rule 74 (eq_exp -> expression > expression .) ]
  ! LE              [ reduce using rule 74 (eq_exp -> expression > expression .) ]


state 119

    (75) eq_exp -> expression GE expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 75 (eq_exp -> expression GE expression .)
    )               reduce using rule 75 (eq_exp -> expression GE expression .)
    ,               reduce using rule 75 (eq_exp -> expression GE expression .)
    ]               reduce using rule 75 (eq_exp -> expression GE expression .)
    }               reduce using rule 75 (eq_exp -> expression GE expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! -               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! *               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! /               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! &               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! |               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! ^               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! EQ              [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! NE              [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! LOR             [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! LAND            [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! <               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! >               [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! GE              [ reduce using rule 75 (eq_exp -> expression GE expression .) ]
  ! LE              [ reduce using rule 75 (eq_exp -> expression GE expression .) ]


state 120

    (76) eq_exp -> expression LE expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 76 (eq_exp -> expression LE expression .)
    )               reduce using rule 76 (eq_exp -> expression LE expression .)
    ,               reduce using rule 76 (eq_exp -> expression LE expression .)
    ]               reduce using rule 76 (eq_exp -> expression LE expression .)
    }               reduce using rule 76 (eq_exp -> expression LE expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! -               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! *               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! /               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! &               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! |               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! ^               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! EQ              [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! NE              [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! LOR             [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! LAND            [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! <               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! >               [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! GE              [ reduce using rule 76 (eq_exp -> expression LE expression .) ]
  ! LE              [ reduce using rule 76 (eq_exp -> expression LE expression .) ]


state 121

    (56) expression -> ( expression ) .

    +               reduce using rule 56 (expression -> ( expression ) .)
    -               reduce using rule 56 (expression -> ( expression ) .)
    *               reduce using rule 56 (expression -> ( expression ) .)
    /               reduce using rule 56 (expression -> ( expression ) .)
    &               reduce using rule 56 (expression -> ( expression ) .)
    |               reduce using rule 56 (expression -> ( expression ) .)
    ^               reduce using rule 56 (expression -> ( expression ) .)
    EQ              reduce using rule 56 (expression -> ( expression ) .)
    NE              reduce using rule 56 (expression -> ( expression ) .)
    LOR             reduce using rule 56 (expression -> ( expression ) .)
    LAND            reduce using rule 56 (expression -> ( expression ) .)
    <               reduce using rule 56 (expression -> ( expression ) .)
    >               reduce using rule 56 (expression -> ( expression ) .)
    GE              reduce using rule 56 (expression -> ( expression ) .)
    LE              reduce using rule 56 (expression -> ( expression ) .)
    ;               reduce using rule 56 (expression -> ( expression ) .)
    )               reduce using rule 56 (expression -> ( expression ) .)
    ,               reduce using rule 56 (expression -> ( expression ) .)
    ]               reduce using rule 56 (expression -> ( expression ) .)
    }               reduce using rule 56 (expression -> ( expression ) .)


state 122

    (12) expression -> PRINTSTR ( S_CONST . )

    )               shift and go to state 141


state 123

    (63) expression -> * ID = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 142
    eq_exp                         shift and go to state 36

state 124

    (62) expression -> & ID [ . expression ]
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 143
    eq_exp                         shift and go to state 36

state 125

    (77) compound_statement -> { statement_list } .

    VOID            reduce using rule 77 (compound_statement -> { statement_list } .)
    INT             reduce using rule 77 (compound_statement -> { statement_list } .)
    CHAR            reduce using rule 77 (compound_statement -> { statement_list } .)
    $end            reduce using rule 77 (compound_statement -> { statement_list } .)
    }               reduce using rule 77 (compound_statement -> { statement_list } .)
    RETURN          reduce using rule 77 (compound_statement -> { statement_list } .)
    BREAK           reduce using rule 77 (compound_statement -> { statement_list } .)
    CONTINUE        reduce using rule 77 (compound_statement -> { statement_list } .)
    WHILE           reduce using rule 77 (compound_statement -> { statement_list } .)
    DO              reduce using rule 77 (compound_statement -> { statement_list } .)
    FOR             reduce using rule 77 (compound_statement -> { statement_list } .)
    IF              reduce using rule 77 (compound_statement -> { statement_list } .)
    ID              reduce using rule 77 (compound_statement -> { statement_list } .)
    PRINTSTR        reduce using rule 77 (compound_statement -> { statement_list } .)
    MINUSMINUS      reduce using rule 77 (compound_statement -> { statement_list } .)
    PLUSPLUS        reduce using rule 77 (compound_statement -> { statement_list } .)
    ~               reduce using rule 77 (compound_statement -> { statement_list } .)
    -               reduce using rule 77 (compound_statement -> { statement_list } .)
    (               reduce using rule 77 (compound_statement -> { statement_list } .)
    NUMBER          reduce using rule 77 (compound_statement -> { statement_list } .)
    &               reduce using rule 77 (compound_statement -> { statement_list } .)
    *               reduce using rule 77 (compound_statement -> { statement_list } .)
    C_CONST         reduce using rule 77 (compound_statement -> { statement_list } .)
    {               reduce using rule 77 (compound_statement -> { statement_list } .)
    ELSE            reduce using rule 77 (compound_statement -> { statement_list } .)


state 126

    (80) statement_list -> statement_list statement .

    }               reduce using rule 80 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 80 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 80 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 80 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 80 (statement_list -> statement_list statement .)
    DO              reduce using rule 80 (statement_list -> statement_list statement .)
    FOR             reduce using rule 80 (statement_list -> statement_list statement .)
    IF              reduce using rule 80 (statement_list -> statement_list statement .)
    ID              reduce using rule 80 (statement_list -> statement_list statement .)
    PRINTSTR        reduce using rule 80 (statement_list -> statement_list statement .)
    MINUSMINUS      reduce using rule 80 (statement_list -> statement_list statement .)
    PLUSPLUS        reduce using rule 80 (statement_list -> statement_list statement .)
    ~               reduce using rule 80 (statement_list -> statement_list statement .)
    -               reduce using rule 80 (statement_list -> statement_list statement .)
    (               reduce using rule 80 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 80 (statement_list -> statement_list statement .)
    &               reduce using rule 80 (statement_list -> statement_list statement .)
    *               reduce using rule 80 (statement_list -> statement_list statement .)
    C_CONST         reduce using rule 80 (statement_list -> statement_list statement .)
    {               reduce using rule 80 (statement_list -> statement_list statement .)
    VOID            reduce using rule 80 (statement_list -> statement_list statement .)
    INT             reduce using rule 80 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 80 (statement_list -> statement_list statement .)


state 127

    (7) statement -> expression ; .

    }               reduce using rule 7 (statement -> expression ; .)
    RETURN          reduce using rule 7 (statement -> expression ; .)
    BREAK           reduce using rule 7 (statement -> expression ; .)
    CONTINUE        reduce using rule 7 (statement -> expression ; .)
    WHILE           reduce using rule 7 (statement -> expression ; .)
    DO              reduce using rule 7 (statement -> expression ; .)
    FOR             reduce using rule 7 (statement -> expression ; .)
    IF              reduce using rule 7 (statement -> expression ; .)
    ID              reduce using rule 7 (statement -> expression ; .)
    PRINTSTR        reduce using rule 7 (statement -> expression ; .)
    MINUSMINUS      reduce using rule 7 (statement -> expression ; .)
    PLUSPLUS        reduce using rule 7 (statement -> expression ; .)
    ~               reduce using rule 7 (statement -> expression ; .)
    -               reduce using rule 7 (statement -> expression ; .)
    (               reduce using rule 7 (statement -> expression ; .)
    NUMBER          reduce using rule 7 (statement -> expression ; .)
    &               reduce using rule 7 (statement -> expression ; .)
    *               reduce using rule 7 (statement -> expression ; .)
    C_CONST         reduce using rule 7 (statement -> expression ; .)
    {               reduce using rule 7 (statement -> expression ; .)
    VOID            reduce using rule 7 (statement -> expression ; .)
    INT             reduce using rule 7 (statement -> expression ; .)
    CHAR            reduce using rule 7 (statement -> expression ; .)
    ELSE            reduce using rule 7 (statement -> expression ; .)


state 128

    (8) statement -> declaration ; .

    }               reduce using rule 8 (statement -> declaration ; .)
    RETURN          reduce using rule 8 (statement -> declaration ; .)
    BREAK           reduce using rule 8 (statement -> declaration ; .)
    CONTINUE        reduce using rule 8 (statement -> declaration ; .)
    WHILE           reduce using rule 8 (statement -> declaration ; .)
    DO              reduce using rule 8 (statement -> declaration ; .)
    FOR             reduce using rule 8 (statement -> declaration ; .)
    IF              reduce using rule 8 (statement -> declaration ; .)
    ID              reduce using rule 8 (statement -> declaration ; .)
    PRINTSTR        reduce using rule 8 (statement -> declaration ; .)
    MINUSMINUS      reduce using rule 8 (statement -> declaration ; .)
    PLUSPLUS        reduce using rule 8 (statement -> declaration ; .)
    ~               reduce using rule 8 (statement -> declaration ; .)
    -               reduce using rule 8 (statement -> declaration ; .)
    (               reduce using rule 8 (statement -> declaration ; .)
    NUMBER          reduce using rule 8 (statement -> declaration ; .)
    &               reduce using rule 8 (statement -> declaration ; .)
    *               reduce using rule 8 (statement -> declaration ; .)
    C_CONST         reduce using rule 8 (statement -> declaration ; .)
    {               reduce using rule 8 (statement -> declaration ; .)
    VOID            reduce using rule 8 (statement -> declaration ; .)
    INT             reduce using rule 8 (statement -> declaration ; .)
    CHAR            reduce using rule 8 (statement -> declaration ; .)
    ELSE            reduce using rule 8 (statement -> declaration ; .)


state 129

    (18) statement -> RETURN expression . ;
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    ;               shift and go to state 144
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 130

    (19) statement -> RETURN ; .

    }               reduce using rule 19 (statement -> RETURN ; .)
    RETURN          reduce using rule 19 (statement -> RETURN ; .)
    BREAK           reduce using rule 19 (statement -> RETURN ; .)
    CONTINUE        reduce using rule 19 (statement -> RETURN ; .)
    WHILE           reduce using rule 19 (statement -> RETURN ; .)
    DO              reduce using rule 19 (statement -> RETURN ; .)
    FOR             reduce using rule 19 (statement -> RETURN ; .)
    IF              reduce using rule 19 (statement -> RETURN ; .)
    ID              reduce using rule 19 (statement -> RETURN ; .)
    PRINTSTR        reduce using rule 19 (statement -> RETURN ; .)
    MINUSMINUS      reduce using rule 19 (statement -> RETURN ; .)
    PLUSPLUS        reduce using rule 19 (statement -> RETURN ; .)
    ~               reduce using rule 19 (statement -> RETURN ; .)
    -               reduce using rule 19 (statement -> RETURN ; .)
    (               reduce using rule 19 (statement -> RETURN ; .)
    NUMBER          reduce using rule 19 (statement -> RETURN ; .)
    &               reduce using rule 19 (statement -> RETURN ; .)
    *               reduce using rule 19 (statement -> RETURN ; .)
    C_CONST         reduce using rule 19 (statement -> RETURN ; .)
    {               reduce using rule 19 (statement -> RETURN ; .)
    VOID            reduce using rule 19 (statement -> RETURN ; .)
    INT             reduce using rule 19 (statement -> RETURN ; .)
    CHAR            reduce using rule 19 (statement -> RETURN ; .)
    ELSE            reduce using rule 19 (statement -> RETURN ; .)


state 131

    (20) statement -> BREAK ; .

    }               reduce using rule 20 (statement -> BREAK ; .)
    RETURN          reduce using rule 20 (statement -> BREAK ; .)
    BREAK           reduce using rule 20 (statement -> BREAK ; .)
    CONTINUE        reduce using rule 20 (statement -> BREAK ; .)
    WHILE           reduce using rule 20 (statement -> BREAK ; .)
    DO              reduce using rule 20 (statement -> BREAK ; .)
    FOR             reduce using rule 20 (statement -> BREAK ; .)
    IF              reduce using rule 20 (statement -> BREAK ; .)
    ID              reduce using rule 20 (statement -> BREAK ; .)
    PRINTSTR        reduce using rule 20 (statement -> BREAK ; .)
    MINUSMINUS      reduce using rule 20 (statement -> BREAK ; .)
    PLUSPLUS        reduce using rule 20 (statement -> BREAK ; .)
    ~               reduce using rule 20 (statement -> BREAK ; .)
    -               reduce using rule 20 (statement -> BREAK ; .)
    (               reduce using rule 20 (statement -> BREAK ; .)
    NUMBER          reduce using rule 20 (statement -> BREAK ; .)
    &               reduce using rule 20 (statement -> BREAK ; .)
    *               reduce using rule 20 (statement -> BREAK ; .)
    C_CONST         reduce using rule 20 (statement -> BREAK ; .)
    {               reduce using rule 20 (statement -> BREAK ; .)
    VOID            reduce using rule 20 (statement -> BREAK ; .)
    INT             reduce using rule 20 (statement -> BREAK ; .)
    CHAR            reduce using rule 20 (statement -> BREAK ; .)
    ELSE            reduce using rule 20 (statement -> BREAK ; .)


state 132

    (21) statement -> CONTINUE ; .

    }               reduce using rule 21 (statement -> CONTINUE ; .)
    RETURN          reduce using rule 21 (statement -> CONTINUE ; .)
    BREAK           reduce using rule 21 (statement -> CONTINUE ; .)
    CONTINUE        reduce using rule 21 (statement -> CONTINUE ; .)
    WHILE           reduce using rule 21 (statement -> CONTINUE ; .)
    DO              reduce using rule 21 (statement -> CONTINUE ; .)
    FOR             reduce using rule 21 (statement -> CONTINUE ; .)
    IF              reduce using rule 21 (statement -> CONTINUE ; .)
    ID              reduce using rule 21 (statement -> CONTINUE ; .)
    PRINTSTR        reduce using rule 21 (statement -> CONTINUE ; .)
    MINUSMINUS      reduce using rule 21 (statement -> CONTINUE ; .)
    PLUSPLUS        reduce using rule 21 (statement -> CONTINUE ; .)
    ~               reduce using rule 21 (statement -> CONTINUE ; .)
    -               reduce using rule 21 (statement -> CONTINUE ; .)
    (               reduce using rule 21 (statement -> CONTINUE ; .)
    NUMBER          reduce using rule 21 (statement -> CONTINUE ; .)
    &               reduce using rule 21 (statement -> CONTINUE ; .)
    *               reduce using rule 21 (statement -> CONTINUE ; .)
    C_CONST         reduce using rule 21 (statement -> CONTINUE ; .)
    {               reduce using rule 21 (statement -> CONTINUE ; .)
    VOID            reduce using rule 21 (statement -> CONTINUE ; .)
    INT             reduce using rule 21 (statement -> CONTINUE ; .)
    CHAR            reduce using rule 21 (statement -> CONTINUE ; .)
    ELSE            reduce using rule 21 (statement -> CONTINUE ; .)


state 133

    (22) statement -> WHILE ( . expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 145
    eq_exp                         shift and go to state 36

state 134

    (23) statement -> DO statement . WHILE ( expression ) ;

    WHILE           shift and go to state 146


state 135

    (24) statement -> FOR ( . expression ; expression ; expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 147
    eq_exp                         shift and go to state 36

state 136

    (25) statement -> IF ( . expression ) statement
    (26) statement -> IF ( . expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 148
    eq_exp                         shift and go to state 36

state 137

    (27) declaration -> declaration_specifier ID [ NUMBER ] = { . expression_list }
    (43) expression_list -> . expression
    (44) expression_list -> . expression_list , expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression_list                shift and go to state 149
    expression                     shift and go to state 96
    eq_exp                         shift and go to state 36

state 138

    (11) expression -> ID ( expression_list ) .

    +               reduce using rule 11 (expression -> ID ( expression_list ) .)
    -               reduce using rule 11 (expression -> ID ( expression_list ) .)
    *               reduce using rule 11 (expression -> ID ( expression_list ) .)
    /               reduce using rule 11 (expression -> ID ( expression_list ) .)
    &               reduce using rule 11 (expression -> ID ( expression_list ) .)
    |               reduce using rule 11 (expression -> ID ( expression_list ) .)
    ^               reduce using rule 11 (expression -> ID ( expression_list ) .)
    EQ              reduce using rule 11 (expression -> ID ( expression_list ) .)
    NE              reduce using rule 11 (expression -> ID ( expression_list ) .)
    LOR             reduce using rule 11 (expression -> ID ( expression_list ) .)
    LAND            reduce using rule 11 (expression -> ID ( expression_list ) .)
    <               reduce using rule 11 (expression -> ID ( expression_list ) .)
    >               reduce using rule 11 (expression -> ID ( expression_list ) .)
    GE              reduce using rule 11 (expression -> ID ( expression_list ) .)
    LE              reduce using rule 11 (expression -> ID ( expression_list ) .)
    ;               reduce using rule 11 (expression -> ID ( expression_list ) .)
    )               reduce using rule 11 (expression -> ID ( expression_list ) .)
    ,               reduce using rule 11 (expression -> ID ( expression_list ) .)
    ]               reduce using rule 11 (expression -> ID ( expression_list ) .)
    }               reduce using rule 11 (expression -> ID ( expression_list ) .)


state 139

    (44) expression_list -> expression_list , . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 150
    eq_exp                         shift and go to state 36

state 140

    (57) expression -> ID [ expression ] .
    (58) expression -> ID [ expression ] . = expression

    +               reduce using rule 57 (expression -> ID [ expression ] .)
    -               reduce using rule 57 (expression -> ID [ expression ] .)
    *               reduce using rule 57 (expression -> ID [ expression ] .)
    /               reduce using rule 57 (expression -> ID [ expression ] .)
    &               reduce using rule 57 (expression -> ID [ expression ] .)
    |               reduce using rule 57 (expression -> ID [ expression ] .)
    ^               reduce using rule 57 (expression -> ID [ expression ] .)
    EQ              reduce using rule 57 (expression -> ID [ expression ] .)
    NE              reduce using rule 57 (expression -> ID [ expression ] .)
    LOR             reduce using rule 57 (expression -> ID [ expression ] .)
    LAND            reduce using rule 57 (expression -> ID [ expression ] .)
    <               reduce using rule 57 (expression -> ID [ expression ] .)
    >               reduce using rule 57 (expression -> ID [ expression ] .)
    GE              reduce using rule 57 (expression -> ID [ expression ] .)
    LE              reduce using rule 57 (expression -> ID [ expression ] .)
    ;               reduce using rule 57 (expression -> ID [ expression ] .)
    )               reduce using rule 57 (expression -> ID [ expression ] .)
    ,               reduce using rule 57 (expression -> ID [ expression ] .)
    ]               reduce using rule 57 (expression -> ID [ expression ] .)
    }               reduce using rule 57 (expression -> ID [ expression ] .)
    =               shift and go to state 151


state 141

    (12) expression -> PRINTSTR ( S_CONST ) .

    +               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    -               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    *               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    /               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    &               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    |               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    ^               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    EQ              reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    NE              reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    LOR             reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    LAND            reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    <               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    >               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    GE              reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    LE              reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    ;               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    )               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    ,               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    ]               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)
    }               reduce using rule 12 (expression -> PRINTSTR ( S_CONST ) .)


state 142

    (63) expression -> * ID = expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 63 (expression -> * ID = expression .)
    )               reduce using rule 63 (expression -> * ID = expression .)
    ,               reduce using rule 63 (expression -> * ID = expression .)
    ]               reduce using rule 63 (expression -> * ID = expression .)
    }               reduce using rule 63 (expression -> * ID = expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! -               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! *               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! /               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! &               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! |               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! ^               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! EQ              [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! NE              [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! LOR             [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! LAND            [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! <               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! >               [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! GE              [ reduce using rule 63 (expression -> * ID = expression .) ]
  ! LE              [ reduce using rule 63 (expression -> * ID = expression .) ]


state 143

    (62) expression -> & ID [ expression . ]
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    ]               shift and go to state 152
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 144

    (18) statement -> RETURN expression ; .

    }               reduce using rule 18 (statement -> RETURN expression ; .)
    RETURN          reduce using rule 18 (statement -> RETURN expression ; .)
    BREAK           reduce using rule 18 (statement -> RETURN expression ; .)
    CONTINUE        reduce using rule 18 (statement -> RETURN expression ; .)
    WHILE           reduce using rule 18 (statement -> RETURN expression ; .)
    DO              reduce using rule 18 (statement -> RETURN expression ; .)
    FOR             reduce using rule 18 (statement -> RETURN expression ; .)
    IF              reduce using rule 18 (statement -> RETURN expression ; .)
    ID              reduce using rule 18 (statement -> RETURN expression ; .)
    PRINTSTR        reduce using rule 18 (statement -> RETURN expression ; .)
    MINUSMINUS      reduce using rule 18 (statement -> RETURN expression ; .)
    PLUSPLUS        reduce using rule 18 (statement -> RETURN expression ; .)
    ~               reduce using rule 18 (statement -> RETURN expression ; .)
    -               reduce using rule 18 (statement -> RETURN expression ; .)
    (               reduce using rule 18 (statement -> RETURN expression ; .)
    NUMBER          reduce using rule 18 (statement -> RETURN expression ; .)
    &               reduce using rule 18 (statement -> RETURN expression ; .)
    *               reduce using rule 18 (statement -> RETURN expression ; .)
    C_CONST         reduce using rule 18 (statement -> RETURN expression ; .)
    {               reduce using rule 18 (statement -> RETURN expression ; .)
    VOID            reduce using rule 18 (statement -> RETURN expression ; .)
    INT             reduce using rule 18 (statement -> RETURN expression ; .)
    CHAR            reduce using rule 18 (statement -> RETURN expression ; .)
    ELSE            reduce using rule 18 (statement -> RETURN expression ; .)


state 145

    (22) statement -> WHILE ( expression . ) statement
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    )               shift and go to state 153
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 146

    (23) statement -> DO statement WHILE . ( expression ) ;

    (               shift and go to state 154


state 147

    (24) statement -> FOR ( expression . ; expression ; expression ) statement
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    ;               shift and go to state 155
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 148

    (25) statement -> IF ( expression . ) statement
    (26) statement -> IF ( expression . ) statement ELSE statement
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    )               shift and go to state 156
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 149

    (27) declaration -> declaration_specifier ID [ NUMBER ] = { expression_list . }
    (44) expression_list -> expression_list . , expression

    }               shift and go to state 157
    ,               shift and go to state 139


state 150

    (44) expression_list -> expression_list , expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    )               reduce using rule 44 (expression_list -> expression_list , expression .)
    ,               reduce using rule 44 (expression_list -> expression_list , expression .)
    }               reduce using rule 44 (expression_list -> expression_list , expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 151

    (58) expression -> ID [ expression ] = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 158
    eq_exp                         shift and go to state 36

state 152

    (62) expression -> & ID [ expression ] .

    +               reduce using rule 62 (expression -> & ID [ expression ] .)
    -               reduce using rule 62 (expression -> & ID [ expression ] .)
    *               reduce using rule 62 (expression -> & ID [ expression ] .)
    /               reduce using rule 62 (expression -> & ID [ expression ] .)
    &               reduce using rule 62 (expression -> & ID [ expression ] .)
    |               reduce using rule 62 (expression -> & ID [ expression ] .)
    ^               reduce using rule 62 (expression -> & ID [ expression ] .)
    EQ              reduce using rule 62 (expression -> & ID [ expression ] .)
    NE              reduce using rule 62 (expression -> & ID [ expression ] .)
    LOR             reduce using rule 62 (expression -> & ID [ expression ] .)
    LAND            reduce using rule 62 (expression -> & ID [ expression ] .)
    <               reduce using rule 62 (expression -> & ID [ expression ] .)
    >               reduce using rule 62 (expression -> & ID [ expression ] .)
    GE              reduce using rule 62 (expression -> & ID [ expression ] .)
    LE              reduce using rule 62 (expression -> & ID [ expression ] .)
    ;               reduce using rule 62 (expression -> & ID [ expression ] .)
    )               reduce using rule 62 (expression -> & ID [ expression ] .)
    ,               reduce using rule 62 (expression -> & ID [ expression ] .)
    ]               reduce using rule 62 (expression -> & ID [ expression ] .)
    }               reduce using rule 62 (expression -> & ID [ expression ] .)


state 153

    (22) statement -> WHILE ( expression ) . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (18) statement -> . RETURN expression ;
    (19) statement -> . RETURN ;
    (20) statement -> . BREAK ;
    (21) statement -> . CONTINUE ;
    (22) statement -> . WHILE ( expression ) statement
    (23) statement -> . DO statement WHILE ( expression ) ;
    (24) statement -> . FOR ( expression ; expression ; expression ) statement
    (25) statement -> . IF ( expression ) statement
    (26) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    RETURN          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    IF              shift and go to state 90
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35
    {               shift and go to state 39
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 81
    statement                      shift and go to state 159
    declaration                    shift and go to state 82
    compound_statement             shift and go to state 83
    eq_exp                         shift and go to state 36
    declaration_specifier          shift and go to state 19

state 154

    (23) statement -> DO statement WHILE ( . expression ) ;
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 160
    eq_exp                         shift and go to state 36

state 155

    (24) statement -> FOR ( expression ; . expression ; expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 161
    eq_exp                         shift and go to state 36

state 156

    (25) statement -> IF ( expression ) . statement
    (26) statement -> IF ( expression ) . statement ELSE statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (18) statement -> . RETURN expression ;
    (19) statement -> . RETURN ;
    (20) statement -> . BREAK ;
    (21) statement -> . CONTINUE ;
    (22) statement -> . WHILE ( expression ) statement
    (23) statement -> . DO statement WHILE ( expression ) ;
    (24) statement -> . FOR ( expression ; expression ; expression ) statement
    (25) statement -> . IF ( expression ) statement
    (26) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    RETURN          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    IF              shift and go to state 90
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35
    {               shift and go to state 39
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 81
    statement                      shift and go to state 162
    declaration                    shift and go to state 82
    compound_statement             shift and go to state 83
    eq_exp                         shift and go to state 36
    declaration_specifier          shift and go to state 19

state 157

    (27) declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .

    ;               reduce using rule 27 (declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .)
    )               reduce using rule 27 (declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .)
    ,               reduce using rule 27 (declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .)


state 158

    (58) expression -> ID [ expression ] = expression .
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 58 (expression -> ID [ expression ] = expression .)
    )               reduce using rule 58 (expression -> ID [ expression ] = expression .)
    ,               reduce using rule 58 (expression -> ID [ expression ] = expression .)
    ]               reduce using rule 58 (expression -> ID [ expression ] = expression .)
    }               reduce using rule 58 (expression -> ID [ expression ] = expression .)
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69

  ! +               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! -               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! *               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! /               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! &               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! |               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! ^               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! NE              [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! LOR             [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! LAND            [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! <               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! >               [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! GE              [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]
  ! LE              [ reduce using rule 58 (expression -> ID [ expression ] = expression .) ]


state 159

    (22) statement -> WHILE ( expression ) statement .

    }               reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    RETURN          reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    BREAK           reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    CONTINUE        reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    WHILE           reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    DO              reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    FOR             reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    IF              reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    ID              reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    PRINTSTR        reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    MINUSMINUS      reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    PLUSPLUS        reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    ~               reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    -               reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    (               reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    NUMBER          reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    &               reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    *               reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    C_CONST         reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    {               reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    VOID            reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    INT             reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    CHAR            reduce using rule 22 (statement -> WHILE ( expression ) statement .)
    ELSE            reduce using rule 22 (statement -> WHILE ( expression ) statement .)


state 160

    (23) statement -> DO statement WHILE ( expression . ) ;
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    )               shift and go to state 163
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 161

    (24) statement -> FOR ( expression ; expression . ; expression ) statement
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    ;               shift and go to state 164
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 162

    (25) statement -> IF ( expression ) statement .
    (26) statement -> IF ( expression ) statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    }               reduce using rule 25 (statement -> IF ( expression ) statement .)
    RETURN          reduce using rule 25 (statement -> IF ( expression ) statement .)
    BREAK           reduce using rule 25 (statement -> IF ( expression ) statement .)
    CONTINUE        reduce using rule 25 (statement -> IF ( expression ) statement .)
    WHILE           reduce using rule 25 (statement -> IF ( expression ) statement .)
    DO              reduce using rule 25 (statement -> IF ( expression ) statement .)
    FOR             reduce using rule 25 (statement -> IF ( expression ) statement .)
    IF              reduce using rule 25 (statement -> IF ( expression ) statement .)
    ID              reduce using rule 25 (statement -> IF ( expression ) statement .)
    PRINTSTR        reduce using rule 25 (statement -> IF ( expression ) statement .)
    MINUSMINUS      reduce using rule 25 (statement -> IF ( expression ) statement .)
    PLUSPLUS        reduce using rule 25 (statement -> IF ( expression ) statement .)
    ~               reduce using rule 25 (statement -> IF ( expression ) statement .)
    -               reduce using rule 25 (statement -> IF ( expression ) statement .)
    (               reduce using rule 25 (statement -> IF ( expression ) statement .)
    NUMBER          reduce using rule 25 (statement -> IF ( expression ) statement .)
    &               reduce using rule 25 (statement -> IF ( expression ) statement .)
    *               reduce using rule 25 (statement -> IF ( expression ) statement .)
    C_CONST         reduce using rule 25 (statement -> IF ( expression ) statement .)
    {               reduce using rule 25 (statement -> IF ( expression ) statement .)
    VOID            reduce using rule 25 (statement -> IF ( expression ) statement .)
    INT             reduce using rule 25 (statement -> IF ( expression ) statement .)
    CHAR            reduce using rule 25 (statement -> IF ( expression ) statement .)
    ELSE            shift and go to state 165

  ! ELSE            [ reduce using rule 25 (statement -> IF ( expression ) statement .) ]


state 163

    (23) statement -> DO statement WHILE ( expression ) . ;

    ;               shift and go to state 166


state 164

    (24) statement -> FOR ( expression ; expression ; . expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression

    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35

    expression                     shift and go to state 167
    eq_exp                         shift and go to state 36

state 165

    (26) statement -> IF ( expression ) statement ELSE . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (18) statement -> . RETURN expression ;
    (19) statement -> . RETURN ;
    (20) statement -> . BREAK ;
    (21) statement -> . CONTINUE ;
    (22) statement -> . WHILE ( expression ) statement
    (23) statement -> . DO statement WHILE ( expression ) ;
    (24) statement -> . FOR ( expression ; expression ; expression ) statement
    (25) statement -> . IF ( expression ) statement
    (26) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    RETURN          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    IF              shift and go to state 90
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35
    {               shift and go to state 39
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 81
    statement                      shift and go to state 168
    declaration                    shift and go to state 82
    compound_statement             shift and go to state 83
    eq_exp                         shift and go to state 36
    declaration_specifier          shift and go to state 19

state 166

    (23) statement -> DO statement WHILE ( expression ) ; .

    }               reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    RETURN          reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    BREAK           reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    CONTINUE        reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    WHILE           reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    DO              reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    FOR             reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    IF              reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    ID              reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    PRINTSTR        reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    MINUSMINUS      reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    PLUSPLUS        reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    ~               reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    -               reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    (               reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    NUMBER          reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    &               reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    *               reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    C_CONST         reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    {               reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    VOID            reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    INT             reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    CHAR            reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)
    ELSE            reduce using rule 23 (statement -> DO statement WHILE ( expression ) ; .)


state 167

    (24) statement -> FOR ( expression ; expression ; expression . ) statement
    (47) expression -> expression . + expression
    (48) expression -> expression . - expression
    (49) expression -> expression . * expression
    (50) expression -> expression . / expression
    (51) expression -> expression . & expression
    (52) expression -> expression . | expression
    (53) expression -> expression . ^ expression
    (69) eq_exp -> expression . EQ expression
    (70) eq_exp -> expression . NE expression
    (71) eq_exp -> expression . LOR expression
    (72) eq_exp -> expression . LAND expression
    (73) eq_exp -> expression . < expression
    (74) eq_exp -> expression . > expression
    (75) eq_exp -> expression . GE expression
    (76) eq_exp -> expression . LE expression

    )               shift and go to state 169
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    &               shift and go to state 59
    |               shift and go to state 60
    ^               shift and go to state 61
    EQ              shift and go to state 62
    NE              shift and go to state 63
    LOR             shift and go to state 64
    LAND            shift and go to state 65
    <               shift and go to state 66
    >               shift and go to state 67
    GE              shift and go to state 68
    LE              shift and go to state 69


state 168

    (26) statement -> IF ( expression ) statement ELSE statement .

    }               reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    RETURN          reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    BREAK           reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    CONTINUE        reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    WHILE           reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    DO              reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    FOR             reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    IF              reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    ID              reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    PRINTSTR        reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    MINUSMINUS      reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    PLUSPLUS        reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    ~               reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    -               reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    (               reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    NUMBER          reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    &               reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    *               reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    C_CONST         reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    {               reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    VOID            reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    INT             reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    CHAR            reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)
    ELSE            reduce using rule 26 (statement -> IF ( expression ) statement ELSE statement .)


state 169

    (24) statement -> FOR ( expression ; expression ; expression ) . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (18) statement -> . RETURN expression ;
    (19) statement -> . RETURN ;
    (20) statement -> . BREAK ;
    (21) statement -> . CONTINUE ;
    (22) statement -> . WHILE ( expression ) statement
    (23) statement -> . DO statement WHILE ( expression ) ;
    (24) statement -> . FOR ( expression ; expression ; expression ) statement
    (25) statement -> . IF ( expression ) statement
    (26) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . PRINTSTR ( S_CONST )
    (31) expression -> . MINUSMINUS ID
    (32) expression -> . ID MINUSMINUS
    (33) expression -> . PLUSPLUS ID
    (34) expression -> . ID PLUSPLUS
    (35) expression -> . ID XOREQUAL expression
    (36) expression -> . ID ANDEQUAL expression
    (37) expression -> . ID OREQUAL expression
    (38) expression -> . ID TIMESEQUAL expression
    (39) expression -> . ID DIVEQUAL expression
    (40) expression -> . ID PLUSEQUAL expression
    (41) expression -> . ID MINUSEQUAL expression
    (42) expression -> . ID = expression
    (47) expression -> . expression + expression
    (48) expression -> . expression - expression
    (49) expression -> . expression * expression
    (50) expression -> . expression / expression
    (51) expression -> . expression & expression
    (52) expression -> . expression | expression
    (53) expression -> . expression ^ expression
    (54) expression -> . ~ expression
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . ID [ expression ]
    (58) expression -> . ID [ expression ] = expression
    (59) expression -> . NUMBER
    (60) expression -> . ID
    (61) expression -> . & ID
    (62) expression -> . & ID [ expression ]
    (63) expression -> . * ID = expression
    (64) expression -> . * ID
    (67) expression -> . C_CONST
    (68) expression -> . eq_exp
    (27) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (28) declaration -> . declaration_specifier ID [ NUMBER ]
    (29) declaration -> . declaration_specifier ID = expression
    (30) declaration -> . declaration_specifier ID
    (77) compound_statement -> . { statement_list }
    (78) compound_statement -> . { }
    (69) eq_exp -> . expression EQ expression
    (70) eq_exp -> . expression NE expression
    (71) eq_exp -> . expression LOR expression
    (72) eq_exp -> . expression LAND expression
    (73) eq_exp -> . expression < expression
    (74) eq_exp -> . expression > expression
    (75) eq_exp -> . expression GE expression
    (76) eq_exp -> . expression LE expression
    (13) declaration_specifier -> . VOID
    (14) declaration_specifier -> . INT
    (15) declaration_specifier -> . CHAR
    (16) declaration_specifier -> . INT pointer
    (17) declaration_specifier -> . CHAR pointer

    RETURN          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    IF              shift and go to state 90
    ID              shift and go to state 24
    PRINTSTR        shift and go to state 27
    MINUSMINUS      shift and go to state 28
    PLUSPLUS        shift and go to state 29
    ~               shift and go to state 33
    -               shift and go to state 30
    (               shift and go to state 26
    NUMBER          shift and go to state 34
    &               shift and go to state 32
    *               shift and go to state 31
    C_CONST         shift and go to state 35
    {               shift and go to state 39
    VOID            shift and go to state 6
    INT             shift and go to state 7
    CHAR            shift and go to state 8

    expression                     shift and go to state 81
    statement                      shift and go to state 170
    declaration                    shift and go to state 82
    compound_statement             shift and go to state 83
    eq_exp                         shift and go to state 36
    declaration_specifier          shift and go to state 19

state 170

    (24) statement -> FOR ( expression ; expression ; expression ) statement .

    }               reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    RETURN          reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    BREAK           reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    CONTINUE        reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    WHILE           reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    DO              reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    FOR             reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    IF              reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    ID              reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    PRINTSTR        reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    MINUSMINUS      reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    PLUSPLUS        reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    ~               reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    -               reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    (               reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    NUMBER          reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    &               reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    *               reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    C_CONST         reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    {               reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    VOID            reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    INT             reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    CHAR            reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)
    ELSE            reduce using rule 24 (statement -> FOR ( expression ; expression ; expression ) statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 97 resolved as shift
WARNING: shift/reduce conflict for - in state 97 resolved as shift
WARNING: shift/reduce conflict for * in state 97 resolved as shift
WARNING: shift/reduce conflict for / in state 97 resolved as shift
WARNING: shift/reduce conflict for & in state 97 resolved as shift
WARNING: shift/reduce conflict for | in state 97 resolved as shift
WARNING: shift/reduce conflict for ^ in state 97 resolved as shift
WARNING: shift/reduce conflict for EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for NE in state 97 resolved as shift
WARNING: shift/reduce conflict for LOR in state 97 resolved as shift
WARNING: shift/reduce conflict for LAND in state 97 resolved as shift
WARNING: shift/reduce conflict for < in state 97 resolved as shift
WARNING: shift/reduce conflict for > in state 97 resolved as shift
WARNING: shift/reduce conflict for GE in state 97 resolved as shift
WARNING: shift/reduce conflict for LE in state 97 resolved as shift
WARNING: shift/reduce conflict for + in state 98 resolved as shift
WARNING: shift/reduce conflict for - in state 98 resolved as shift
WARNING: shift/reduce conflict for * in state 98 resolved as shift
WARNING: shift/reduce conflict for / in state 98 resolved as shift
WARNING: shift/reduce conflict for & in state 98 resolved as shift
WARNING: shift/reduce conflict for | in state 98 resolved as shift
WARNING: shift/reduce conflict for ^ in state 98 resolved as shift
WARNING: shift/reduce conflict for EQ in state 98 resolved as shift
WARNING: shift/reduce conflict for NE in state 98 resolved as shift
WARNING: shift/reduce conflict for LOR in state 98 resolved as shift
WARNING: shift/reduce conflict for LAND in state 98 resolved as shift
WARNING: shift/reduce conflict for < in state 98 resolved as shift
WARNING: shift/reduce conflict for > in state 98 resolved as shift
WARNING: shift/reduce conflict for GE in state 98 resolved as shift
WARNING: shift/reduce conflict for LE in state 98 resolved as shift
WARNING: shift/reduce conflict for + in state 99 resolved as shift
WARNING: shift/reduce conflict for - in state 99 resolved as shift
WARNING: shift/reduce conflict for * in state 99 resolved as shift
WARNING: shift/reduce conflict for / in state 99 resolved as shift
WARNING: shift/reduce conflict for & in state 99 resolved as shift
WARNING: shift/reduce conflict for | in state 99 resolved as shift
WARNING: shift/reduce conflict for ^ in state 99 resolved as shift
WARNING: shift/reduce conflict for EQ in state 99 resolved as shift
WARNING: shift/reduce conflict for NE in state 99 resolved as shift
WARNING: shift/reduce conflict for LOR in state 99 resolved as shift
WARNING: shift/reduce conflict for LAND in state 99 resolved as shift
WARNING: shift/reduce conflict for < in state 99 resolved as shift
WARNING: shift/reduce conflict for > in state 99 resolved as shift
WARNING: shift/reduce conflict for GE in state 99 resolved as shift
WARNING: shift/reduce conflict for LE in state 99 resolved as shift
WARNING: shift/reduce conflict for + in state 100 resolved as shift
WARNING: shift/reduce conflict for - in state 100 resolved as shift
WARNING: shift/reduce conflict for * in state 100 resolved as shift
WARNING: shift/reduce conflict for / in state 100 resolved as shift
WARNING: shift/reduce conflict for & in state 100 resolved as shift
WARNING: shift/reduce conflict for | in state 100 resolved as shift
WARNING: shift/reduce conflict for ^ in state 100 resolved as shift
WARNING: shift/reduce conflict for EQ in state 100 resolved as shift
WARNING: shift/reduce conflict for NE in state 100 resolved as shift
WARNING: shift/reduce conflict for LOR in state 100 resolved as shift
WARNING: shift/reduce conflict for LAND in state 100 resolved as shift
WARNING: shift/reduce conflict for < in state 100 resolved as shift
WARNING: shift/reduce conflict for > in state 100 resolved as shift
WARNING: shift/reduce conflict for GE in state 100 resolved as shift
WARNING: shift/reduce conflict for LE in state 100 resolved as shift
WARNING: shift/reduce conflict for + in state 101 resolved as shift
WARNING: shift/reduce conflict for - in state 101 resolved as shift
WARNING: shift/reduce conflict for * in state 101 resolved as shift
WARNING: shift/reduce conflict for / in state 101 resolved as shift
WARNING: shift/reduce conflict for & in state 101 resolved as shift
WARNING: shift/reduce conflict for | in state 101 resolved as shift
WARNING: shift/reduce conflict for ^ in state 101 resolved as shift
WARNING: shift/reduce conflict for EQ in state 101 resolved as shift
WARNING: shift/reduce conflict for NE in state 101 resolved as shift
WARNING: shift/reduce conflict for LOR in state 101 resolved as shift
WARNING: shift/reduce conflict for LAND in state 101 resolved as shift
WARNING: shift/reduce conflict for < in state 101 resolved as shift
WARNING: shift/reduce conflict for > in state 101 resolved as shift
WARNING: shift/reduce conflict for GE in state 101 resolved as shift
WARNING: shift/reduce conflict for LE in state 101 resolved as shift
WARNING: shift/reduce conflict for + in state 102 resolved as shift
WARNING: shift/reduce conflict for - in state 102 resolved as shift
WARNING: shift/reduce conflict for * in state 102 resolved as shift
WARNING: shift/reduce conflict for / in state 102 resolved as shift
WARNING: shift/reduce conflict for & in state 102 resolved as shift
WARNING: shift/reduce conflict for | in state 102 resolved as shift
WARNING: shift/reduce conflict for ^ in state 102 resolved as shift
WARNING: shift/reduce conflict for EQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NE in state 102 resolved as shift
WARNING: shift/reduce conflict for LOR in state 102 resolved as shift
WARNING: shift/reduce conflict for LAND in state 102 resolved as shift
WARNING: shift/reduce conflict for < in state 102 resolved as shift
WARNING: shift/reduce conflict for > in state 102 resolved as shift
WARNING: shift/reduce conflict for GE in state 102 resolved as shift
WARNING: shift/reduce conflict for LE in state 102 resolved as shift
WARNING: shift/reduce conflict for + in state 103 resolved as shift
WARNING: shift/reduce conflict for - in state 103 resolved as shift
WARNING: shift/reduce conflict for * in state 103 resolved as shift
WARNING: shift/reduce conflict for / in state 103 resolved as shift
WARNING: shift/reduce conflict for & in state 103 resolved as shift
WARNING: shift/reduce conflict for | in state 103 resolved as shift
WARNING: shift/reduce conflict for ^ in state 103 resolved as shift
WARNING: shift/reduce conflict for EQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NE in state 103 resolved as shift
WARNING: shift/reduce conflict for LOR in state 103 resolved as shift
WARNING: shift/reduce conflict for LAND in state 103 resolved as shift
WARNING: shift/reduce conflict for < in state 103 resolved as shift
WARNING: shift/reduce conflict for > in state 103 resolved as shift
WARNING: shift/reduce conflict for GE in state 103 resolved as shift
WARNING: shift/reduce conflict for LE in state 103 resolved as shift
WARNING: shift/reduce conflict for + in state 104 resolved as shift
WARNING: shift/reduce conflict for - in state 104 resolved as shift
WARNING: shift/reduce conflict for * in state 104 resolved as shift
WARNING: shift/reduce conflict for / in state 104 resolved as shift
WARNING: shift/reduce conflict for & in state 104 resolved as shift
WARNING: shift/reduce conflict for | in state 104 resolved as shift
WARNING: shift/reduce conflict for ^ in state 104 resolved as shift
WARNING: shift/reduce conflict for EQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NE in state 104 resolved as shift
WARNING: shift/reduce conflict for LOR in state 104 resolved as shift
WARNING: shift/reduce conflict for LAND in state 104 resolved as shift
WARNING: shift/reduce conflict for < in state 104 resolved as shift
WARNING: shift/reduce conflict for > in state 104 resolved as shift
WARNING: shift/reduce conflict for GE in state 104 resolved as shift
WARNING: shift/reduce conflict for LE in state 104 resolved as shift
WARNING: shift/reduce conflict for + in state 110 resolved as shift
WARNING: shift/reduce conflict for - in state 110 resolved as shift
WARNING: shift/reduce conflict for * in state 110 resolved as shift
WARNING: shift/reduce conflict for / in state 110 resolved as shift
WARNING: shift/reduce conflict for & in state 110 resolved as shift
WARNING: shift/reduce conflict for | in state 110 resolved as shift
WARNING: shift/reduce conflict for ^ in state 110 resolved as shift
WARNING: shift/reduce conflict for EQ in state 110 resolved as shift
WARNING: shift/reduce conflict for NE in state 110 resolved as shift
WARNING: shift/reduce conflict for LOR in state 110 resolved as shift
WARNING: shift/reduce conflict for LAND in state 110 resolved as shift
WARNING: shift/reduce conflict for < in state 110 resolved as shift
WARNING: shift/reduce conflict for > in state 110 resolved as shift
WARNING: shift/reduce conflict for GE in state 110 resolved as shift
WARNING: shift/reduce conflict for LE in state 110 resolved as shift
WARNING: shift/reduce conflict for + in state 111 resolved as shift
WARNING: shift/reduce conflict for - in state 111 resolved as shift
WARNING: shift/reduce conflict for * in state 111 resolved as shift
WARNING: shift/reduce conflict for / in state 111 resolved as shift
WARNING: shift/reduce conflict for & in state 111 resolved as shift
WARNING: shift/reduce conflict for | in state 111 resolved as shift
WARNING: shift/reduce conflict for ^ in state 111 resolved as shift
WARNING: shift/reduce conflict for EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for NE in state 111 resolved as shift
WARNING: shift/reduce conflict for LOR in state 111 resolved as shift
WARNING: shift/reduce conflict for LAND in state 111 resolved as shift
WARNING: shift/reduce conflict for < in state 111 resolved as shift
WARNING: shift/reduce conflict for > in state 111 resolved as shift
WARNING: shift/reduce conflict for GE in state 111 resolved as shift
WARNING: shift/reduce conflict for LE in state 111 resolved as shift
WARNING: shift/reduce conflict for + in state 112 resolved as shift
WARNING: shift/reduce conflict for - in state 112 resolved as shift
WARNING: shift/reduce conflict for * in state 112 resolved as shift
WARNING: shift/reduce conflict for / in state 112 resolved as shift
WARNING: shift/reduce conflict for & in state 112 resolved as shift
WARNING: shift/reduce conflict for | in state 112 resolved as shift
WARNING: shift/reduce conflict for ^ in state 112 resolved as shift
WARNING: shift/reduce conflict for EQ in state 112 resolved as shift
WARNING: shift/reduce conflict for NE in state 112 resolved as shift
WARNING: shift/reduce conflict for LOR in state 112 resolved as shift
WARNING: shift/reduce conflict for LAND in state 112 resolved as shift
WARNING: shift/reduce conflict for < in state 112 resolved as shift
WARNING: shift/reduce conflict for > in state 112 resolved as shift
WARNING: shift/reduce conflict for GE in state 112 resolved as shift
WARNING: shift/reduce conflict for LE in state 112 resolved as shift
WARNING: shift/reduce conflict for + in state 113 resolved as shift
WARNING: shift/reduce conflict for - in state 113 resolved as shift
WARNING: shift/reduce conflict for * in state 113 resolved as shift
WARNING: shift/reduce conflict for / in state 113 resolved as shift
WARNING: shift/reduce conflict for & in state 113 resolved as shift
WARNING: shift/reduce conflict for | in state 113 resolved as shift
WARNING: shift/reduce conflict for ^ in state 113 resolved as shift
WARNING: shift/reduce conflict for EQ in state 113 resolved as shift
WARNING: shift/reduce conflict for NE in state 113 resolved as shift
WARNING: shift/reduce conflict for LOR in state 113 resolved as shift
WARNING: shift/reduce conflict for LAND in state 113 resolved as shift
WARNING: shift/reduce conflict for < in state 113 resolved as shift
WARNING: shift/reduce conflict for > in state 113 resolved as shift
WARNING: shift/reduce conflict for GE in state 113 resolved as shift
WARNING: shift/reduce conflict for LE in state 113 resolved as shift
WARNING: shift/reduce conflict for + in state 114 resolved as shift
WARNING: shift/reduce conflict for - in state 114 resolved as shift
WARNING: shift/reduce conflict for * in state 114 resolved as shift
WARNING: shift/reduce conflict for / in state 114 resolved as shift
WARNING: shift/reduce conflict for & in state 114 resolved as shift
WARNING: shift/reduce conflict for | in state 114 resolved as shift
WARNING: shift/reduce conflict for ^ in state 114 resolved as shift
WARNING: shift/reduce conflict for EQ in state 114 resolved as shift
WARNING: shift/reduce conflict for NE in state 114 resolved as shift
WARNING: shift/reduce conflict for LOR in state 114 resolved as shift
WARNING: shift/reduce conflict for LAND in state 114 resolved as shift
WARNING: shift/reduce conflict for < in state 114 resolved as shift
WARNING: shift/reduce conflict for > in state 114 resolved as shift
WARNING: shift/reduce conflict for GE in state 114 resolved as shift
WARNING: shift/reduce conflict for LE in state 114 resolved as shift
WARNING: shift/reduce conflict for + in state 115 resolved as shift
WARNING: shift/reduce conflict for - in state 115 resolved as shift
WARNING: shift/reduce conflict for * in state 115 resolved as shift
WARNING: shift/reduce conflict for / in state 115 resolved as shift
WARNING: shift/reduce conflict for & in state 115 resolved as shift
WARNING: shift/reduce conflict for | in state 115 resolved as shift
WARNING: shift/reduce conflict for ^ in state 115 resolved as shift
WARNING: shift/reduce conflict for EQ in state 115 resolved as shift
WARNING: shift/reduce conflict for NE in state 115 resolved as shift
WARNING: shift/reduce conflict for LOR in state 115 resolved as shift
WARNING: shift/reduce conflict for LAND in state 115 resolved as shift
WARNING: shift/reduce conflict for < in state 115 resolved as shift
WARNING: shift/reduce conflict for > in state 115 resolved as shift
WARNING: shift/reduce conflict for GE in state 115 resolved as shift
WARNING: shift/reduce conflict for LE in state 115 resolved as shift
WARNING: shift/reduce conflict for + in state 116 resolved as shift
WARNING: shift/reduce conflict for - in state 116 resolved as shift
WARNING: shift/reduce conflict for * in state 116 resolved as shift
WARNING: shift/reduce conflict for / in state 116 resolved as shift
WARNING: shift/reduce conflict for & in state 116 resolved as shift
WARNING: shift/reduce conflict for | in state 116 resolved as shift
WARNING: shift/reduce conflict for ^ in state 116 resolved as shift
WARNING: shift/reduce conflict for EQ in state 116 resolved as shift
WARNING: shift/reduce conflict for NE in state 116 resolved as shift
WARNING: shift/reduce conflict for LOR in state 116 resolved as shift
WARNING: shift/reduce conflict for LAND in state 116 resolved as shift
WARNING: shift/reduce conflict for < in state 116 resolved as shift
WARNING: shift/reduce conflict for > in state 116 resolved as shift
WARNING: shift/reduce conflict for GE in state 116 resolved as shift
WARNING: shift/reduce conflict for LE in state 116 resolved as shift
WARNING: shift/reduce conflict for + in state 117 resolved as shift
WARNING: shift/reduce conflict for - in state 117 resolved as shift
WARNING: shift/reduce conflict for * in state 117 resolved as shift
WARNING: shift/reduce conflict for / in state 117 resolved as shift
WARNING: shift/reduce conflict for & in state 117 resolved as shift
WARNING: shift/reduce conflict for | in state 117 resolved as shift
WARNING: shift/reduce conflict for ^ in state 117 resolved as shift
WARNING: shift/reduce conflict for EQ in state 117 resolved as shift
WARNING: shift/reduce conflict for NE in state 117 resolved as shift
WARNING: shift/reduce conflict for LOR in state 117 resolved as shift
WARNING: shift/reduce conflict for LAND in state 117 resolved as shift
WARNING: shift/reduce conflict for < in state 117 resolved as shift
WARNING: shift/reduce conflict for > in state 117 resolved as shift
WARNING: shift/reduce conflict for GE in state 117 resolved as shift
WARNING: shift/reduce conflict for LE in state 117 resolved as shift
WARNING: shift/reduce conflict for + in state 118 resolved as shift
WARNING: shift/reduce conflict for - in state 118 resolved as shift
WARNING: shift/reduce conflict for * in state 118 resolved as shift
WARNING: shift/reduce conflict for / in state 118 resolved as shift
WARNING: shift/reduce conflict for & in state 118 resolved as shift
WARNING: shift/reduce conflict for | in state 118 resolved as shift
WARNING: shift/reduce conflict for ^ in state 118 resolved as shift
WARNING: shift/reduce conflict for EQ in state 118 resolved as shift
WARNING: shift/reduce conflict for NE in state 118 resolved as shift
WARNING: shift/reduce conflict for LOR in state 118 resolved as shift
WARNING: shift/reduce conflict for LAND in state 118 resolved as shift
WARNING: shift/reduce conflict for < in state 118 resolved as shift
WARNING: shift/reduce conflict for > in state 118 resolved as shift
WARNING: shift/reduce conflict for GE in state 118 resolved as shift
WARNING: shift/reduce conflict for LE in state 118 resolved as shift
WARNING: shift/reduce conflict for + in state 119 resolved as shift
WARNING: shift/reduce conflict for - in state 119 resolved as shift
WARNING: shift/reduce conflict for * in state 119 resolved as shift
WARNING: shift/reduce conflict for / in state 119 resolved as shift
WARNING: shift/reduce conflict for & in state 119 resolved as shift
WARNING: shift/reduce conflict for | in state 119 resolved as shift
WARNING: shift/reduce conflict for ^ in state 119 resolved as shift
WARNING: shift/reduce conflict for EQ in state 119 resolved as shift
WARNING: shift/reduce conflict for NE in state 119 resolved as shift
WARNING: shift/reduce conflict for LOR in state 119 resolved as shift
WARNING: shift/reduce conflict for LAND in state 119 resolved as shift
WARNING: shift/reduce conflict for < in state 119 resolved as shift
WARNING: shift/reduce conflict for > in state 119 resolved as shift
WARNING: shift/reduce conflict for GE in state 119 resolved as shift
WARNING: shift/reduce conflict for LE in state 119 resolved as shift
WARNING: shift/reduce conflict for + in state 120 resolved as shift
WARNING: shift/reduce conflict for - in state 120 resolved as shift
WARNING: shift/reduce conflict for * in state 120 resolved as shift
WARNING: shift/reduce conflict for / in state 120 resolved as shift
WARNING: shift/reduce conflict for & in state 120 resolved as shift
WARNING: shift/reduce conflict for | in state 120 resolved as shift
WARNING: shift/reduce conflict for ^ in state 120 resolved as shift
WARNING: shift/reduce conflict for EQ in state 120 resolved as shift
WARNING: shift/reduce conflict for NE in state 120 resolved as shift
WARNING: shift/reduce conflict for LOR in state 120 resolved as shift
WARNING: shift/reduce conflict for LAND in state 120 resolved as shift
WARNING: shift/reduce conflict for < in state 120 resolved as shift
WARNING: shift/reduce conflict for > in state 120 resolved as shift
WARNING: shift/reduce conflict for GE in state 120 resolved as shift
WARNING: shift/reduce conflict for LE in state 120 resolved as shift
WARNING: shift/reduce conflict for + in state 142 resolved as shift
WARNING: shift/reduce conflict for - in state 142 resolved as shift
WARNING: shift/reduce conflict for * in state 142 resolved as shift
WARNING: shift/reduce conflict for / in state 142 resolved as shift
WARNING: shift/reduce conflict for & in state 142 resolved as shift
WARNING: shift/reduce conflict for | in state 142 resolved as shift
WARNING: shift/reduce conflict for ^ in state 142 resolved as shift
WARNING: shift/reduce conflict for EQ in state 142 resolved as shift
WARNING: shift/reduce conflict for NE in state 142 resolved as shift
WARNING: shift/reduce conflict for LOR in state 142 resolved as shift
WARNING: shift/reduce conflict for LAND in state 142 resolved as shift
WARNING: shift/reduce conflict for < in state 142 resolved as shift
WARNING: shift/reduce conflict for > in state 142 resolved as shift
WARNING: shift/reduce conflict for GE in state 142 resolved as shift
WARNING: shift/reduce conflict for LE in state 142 resolved as shift
WARNING: shift/reduce conflict for + in state 158 resolved as shift
WARNING: shift/reduce conflict for - in state 158 resolved as shift
WARNING: shift/reduce conflict for * in state 158 resolved as shift
WARNING: shift/reduce conflict for / in state 158 resolved as shift
WARNING: shift/reduce conflict for & in state 158 resolved as shift
WARNING: shift/reduce conflict for | in state 158 resolved as shift
WARNING: shift/reduce conflict for ^ in state 158 resolved as shift
WARNING: shift/reduce conflict for EQ in state 158 resolved as shift
WARNING: shift/reduce conflict for NE in state 158 resolved as shift
WARNING: shift/reduce conflict for LOR in state 158 resolved as shift
WARNING: shift/reduce conflict for LAND in state 158 resolved as shift
WARNING: shift/reduce conflict for < in state 158 resolved as shift
WARNING: shift/reduce conflict for > in state 158 resolved as shift
WARNING: shift/reduce conflict for GE in state 158 resolved as shift
WARNING: shift/reduce conflict for LE in state 158 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 162 resolved as shift
